{"version":3,"sources":["webpack://core-next-validation/webpack/universalModuleDefinition","webpack://core-next-validation/webpack/bootstrap","webpack://core-next-validation/./src/validationError.js","webpack://core-next-validation/./src/schemaGenerator.js","webpack://core-next-validation/./src/functions.js","webpack://core-next-validation/./src/index.js","webpack://core-next-validation/./src/validationFramework.js","webpack://core-next-validation/./src/api.js","webpack://core-next-validation/./src/validatorContext.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ERROR_CODES","INVALID_TYPE","ENUM_MISMATCH","ANY_OF_MISSING","ONE_OF_MISSING","ONE_OF_MULTIPLE","NOT_PASSED","NUMBER_MULTIPLE_OF","NUMBER_MINIMUM","NUMBER_MINIMUM_EXCLUSIVE","NUMBER_MAXIMUM","NUMBER_MAXIMUM_EXCLUSIVE","NUMBER_NOT_A_NUMBER","STRING_LENGTH_SHORT","STRING_LENGTH_LONG","STRING_PATTERN","OBJECT_PROPERTIES_MINIMUM","OBJECT_PROPERTIES_MAXIMUM","OBJECT_REQUIRED","OBJECT_ADDITIONAL_PROPERTIES","OBJECT_DEPENDENCY_KEY","ARRAY_LENGTH_SHORT","ARRAY_LENGTH_LONG","ARRAY_UNIQUE","ARRAY_ADDITIONAL_ITEMS","FORMAT_CUSTOM","KEYWORD_CUSTOM","CIRCULAR_REFERENCE","UNKNOWN_PROPERTY","ErrorCodeLookup","ERROR_MESSAGES_DEFAULT","ValidationError","constructor","code","message","params","dataPath","schemaPath","subErrors","Error","err","err2","prefixWith","dataPrefix","schemaPrefix","SCHEMA_HEADER","data","obj","keys","Array","Number","String","URI_TEMPLATE_GLOBAL_MODIFIERS","URI_TEMPLATE_SUFFICES","parseURI","url","href","protocol","authority","host","hostname","port","pathname","search","hash","removeDotSegments","input","output","resolveUrl","base","normSchema","getDocumentUri","uri","isTrustedUrl","baseUrl","testUrl","remainder","schema","baseUri","ValidationFramework","SchemaGenerator","supportsValidation","_myValidator","registerSchema","identity","addSchema","getSchema","getSchemas","clearSchemas","validate","validateMultiple","getValidationMessages","generateSchema","model","languages","createApi","language","_myContext","ValidatorContext","currentLanguage","addFormat","format","validator","addLanguage","messageMap","rootCode","freshApi","result","checkRecursive","banUnknownProperties","context","error","validateResult","urlHistory","getSchemaMap","getSchemaUris","getMissingUris","dropSchemas","defineKeyword","defineError","codeName","codeNumber","defaultMessage","test","reset","missing","valid","errorCodes","CLOSE_ENOUGH_LOW","Math","CLOSE_ENOUGH_HIGH","parent","collectMultiple","errorMessages","trackUnknownProperties","notReallyPercentEncode","string","encodeURI","doubleEncoded","uriTemplateSubstitution","spec","modifier","separator","prefix","shouldEscape","showVariables","trimEmptyString","varNames","varList","varSpecs","varSpecMap","varName","truncate","parts","parseInt","suffices","varSpec","subFunction","valueFunction","startIndex","isFunction","j","encodeURIComponent","first","substitution","recursiveCompare","A","B","keyword","keywordFunction","definedKeywords","createError","messageParams","messageTemplate","JSON","whole","subValue","returnError","collectError","prefixErrors","errors","path","unknownPath","handleError","resolveRefs","urls","schemas","fragment","pointerPath","decodeURIComponent","component","searchSchemas","missingMap","map","filterRegExp","list","validateAll","dataPathParts","schemaPathParts","dataPointerPath","startErrorCount","scannedFrozenSchemaIndex","scannedSchemasIndex","topLevel","scanned","schemaIndex","concat","frozenIndex","scannedFrozen","indexOf","frozenSchemaIndex","scannedFrozenSchemas","scannedFrozenValidationErrors","configurable","e","errorCount","validateBasic","validateNumeric","validateString","validateArray","validateObject","validateCombinations","validateHypermedia","validateFormat","validateDefinedKeywords","dataPart","schemaPart","slice","formatValidators","errorMessage","validationFunctions","func","validateType","dataType","allowedTypes","type","expected","validateEnum","enumVal","validateMultipleOf","validateMinMax","validateNaN","multipleOf","minimum","maximum","isNaN","validateStringLength","validateStringPattern","length","minLength","maxLength","RegExp","regexp","pattern","validateArrayLength","validateArrayUniqueItems","validateArrayItems","minItems","maxItems","match1","match2","validateObjectMinMaxProperties","validateObjectRequiredProperties","validateObjectProperties","validateObjectDependencies","propertyCount","minProperties","maxProperties","keyPointerPath","foundMatch","unknownPropertyPaths","knownPropertyPaths","dep","requiredKey","validateAllOf","validateAnyOf","validateOneOf","validateNot","subSchema","oldUnknownPropertyPaths","oldKnownPropertyPaths","errorAtEnd","validIndex","index1","index2","oldErrorCount","notErrors","ldo","template","UriTemplate","allPresent","ll"],"mappings":"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","file":"core-next-validation.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core-next-validation\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core-next-validation\"] = factory();\n\telse\n\t\troot[\"core-next-validation\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","const ERROR_CODES = {\n  INVALID_TYPE: 0,\n  ENUM_MISMATCH: 1,\n  ANY_OF_MISSING: 10,\n  ONE_OF_MISSING: 11,\n  ONE_OF_MULTIPLE: 12,\n  NOT_PASSED: 13,\n  // Numeric errors\n  NUMBER_MULTIPLE_OF: 100,\n  NUMBER_MINIMUM: 101,\n  NUMBER_MINIMUM_EXCLUSIVE: 102,\n  NUMBER_MAXIMUM: 103,\n  NUMBER_MAXIMUM_EXCLUSIVE: 104,\n  NUMBER_NOT_A_NUMBER: 105,\n  // String errors\n  STRING_LENGTH_SHORT: 200,\n  STRING_LENGTH_LONG: 201,\n  STRING_PATTERN: 202,\n  // Object errors\n  OBJECT_PROPERTIES_MINIMUM: 300,\n  OBJECT_PROPERTIES_MAXIMUM: 301,\n  OBJECT_REQUIRED: 302,\n  OBJECT_ADDITIONAL_PROPERTIES: 303,\n  OBJECT_DEPENDENCY_KEY: 304,\n  // Array errors\n  ARRAY_LENGTH_SHORT: 400,\n  ARRAY_LENGTH_LONG: 401,\n  ARRAY_UNIQUE: 402,\n  ARRAY_ADDITIONAL_ITEMS: 403,\n  // Custom/user-defined errors\n  FORMAT_CUSTOM: 500,\n  KEYWORD_CUSTOM: 501,\n  // Schema structure\n  CIRCULAR_REFERENCE: 600,\n  // Non-standard validation options\n  UNKNOWN_PROPERTY: 1000\n};\n\n// TODO: bundle this\nconst ERROR_MESSAGES_DEFAULT = {\n  INVALID_TYPE: \"Invalid type: {type} (expected {expected})\",\n  ENUM_MISMATCH: \"No enum match for: {value}\",\n  ANY_OF_MISSING: \"Data does not match any schemas from \\\"anyOf\\\"\",\n  ONE_OF_MISSING: \"Data does not match any schemas from \\\"oneOf\\\"\",\n  ONE_OF_MULTIPLE: \"Data is valid against more than one schema from \\\"oneOf\\\": indices {index1} and {index2}\",\n  NOT_PASSED: \"Data matches schema from \\\"not\\\"\",\n  // Numeric errors\n  NUMBER_MULTIPLE_OF: \"Value {value} is not a multiple of {multipleOf}\",\n  NUMBER_MINIMUM: \"Value {value} is less than minimum {minimum}\",\n  NUMBER_MINIMUM_EXCLUSIVE: \"Value {value} is equal to exclusive minimum {minimum}\",\n  NUMBER_MAXIMUM: \"Value {value} is greater than maximum {maximum}\",\n  NUMBER_MAXIMUM_EXCLUSIVE: \"Value {value} is equal to exclusive maximum {maximum}\",\n  NUMBER_NOT_A_NUMBER: \"Value {value} is not a valid number\",\n  // String errors\n  STRING_LENGTH_SHORT: \"String is too short ({length} chars), minimum {minimum}\",\n  STRING_LENGTH_LONG: \"String is too long ({length} chars), maximum {maximum}\",\n  STRING_PATTERN: \"String does not match pattern: {pattern}\",\n  // Object errors\n  OBJECT_PROPERTIES_MINIMUM: \"Too few properties defined ({propertyCount}), minimum {minimum}\",\n  OBJECT_PROPERTIES_MAXIMUM: \"Too many properties defined ({propertyCount}), maximum {maximum}\",\n  OBJECT_REQUIRED: \"Missing required property: {key}\",\n  OBJECT_ADDITIONAL_PROPERTIES: \"Additional properties not allowed\",\n  OBJECT_DEPENDENCY_KEY: \"Dependency failed - key must exist: {missing} (due to key: {key})\",\n  // Array errors\n  ARRAY_LENGTH_SHORT: \"Array is too short ({length}), minimum {minimum}\",\n  ARRAY_LENGTH_LONG: \"Array is too long ({length}), maximum {maximum}\",\n  ARRAY_UNIQUE: \"Array items are not unique (indices {match1} and {match2})\",\n  ARRAY_ADDITIONAL_ITEMS: \"Additional items not allowed\",\n  // Format errors\n  FORMAT_CUSTOM: \"Format validation failed ({message})\",\n  KEYWORD_CUSTOM: \"Keyword failed: {key} ({message})\",\n  // Schema structure\n  CIRCULAR_REFERENCE: \"Circular $refs: {urls}\",\n  // Non-standard validation options\n  UNKNOWN_PROPERTY: \"Unknown property (not in schema)\"\n};\n\nclass ValidationError { //extends Error {\n  constructor(code, message, params, dataPath, schemaPath, subErrors) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    //super(code, message, params);\n    //Error.call(this);\n    if (code === undefined) {\n      throw new Error (\"No code supplied for error: \"+ message);\n    }\n    this.message = message;\n    this.params = params;\n    this.code = code;\n    this.dataPath = dataPath || \"\";\n    this.schemaPath = schemaPath || \"\";\n    this.subErrors = subErrors || null;\n\n    const err = new Error(this.message);\n    this.stack = err.stack || err.stacktrace;\n    if (!this.stack) {\n      try {\n        throw err;\n      } catch(err2) {\n        this.stack = err2.stack || err2.stacktrace;\n      }\n    }\n    this.name = \"ValidationError\";\n  };\n\n  prefixWith(dataPrefix, schemaPrefix) {\n    if (dataPrefix !== null) {\n      dataPrefix = dataPrefix.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n      this.dataPath = \"/\" + dataPrefix + this.dataPath;\n    }\n    if (schemaPrefix !== null) {\n      schemaPrefix = schemaPrefix.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n      this.schemaPath = \"/\" + schemaPrefix + this.schemaPath;\n    }\n    if (this.subErrors !== null) {\n      let i = 0, l = this.subErrors.length;\n      for (i = 0; i < l; i++) {\n        this.subErrors[i].prefixWith(dataPrefix, schemaPrefix);\n      }\n    }\n    return this;\n  };\n};\n\nlet ErrorCodeLookup = {}, key;\nfor (key in ERROR_CODES) {\n  ErrorCodeLookup[ERROR_CODES[key]] = key;\n}\n\nexport { ERROR_CODES, ERROR_MESSAGES_DEFAULT, ValidationError, ErrorCodeLookup };\n","const SCHEMA_HEADER = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"model\",\n  \"description\": \"Generated Schema\",\n  \"type\": \"object\",\n  \"properties\": { }\n};\n\n/**\n * <p>Augmented.Utility.SchemaGenerator<br/>\n *\n * Genrate a schema from a set of data</p>\n * @param {object} data a dataset to produce a schema from\n * @memberof Utility\n */\nconst SchemaGenerator = (data) => {\n  let obj = SCHEMA_HEADER;\n  let i, d, dkey, p, keys = Object.keys(data), l = keys.length;\n  for (i = 0; i < l; i++) {\n    d = keys[i];\n    for (dkey in d) {\n      if (d.hasOwnProperty(dkey)) {\n        p = obj.properties[d] = {};\n\n        let t = (typeof data[d]);\n        if (t === \"object\") {\n          t = (Array.isArray(data[d])) ? \"array\" : \"object\";\n        } else if (t === \"number\") {\n          t = (Number.isInteger(data[d])) ? \"integer\" : \"number\";\n        }\n        p.type = t;\n        p.description = String(d);\n      }\n    }\n  }\n  return obj;\n};\n\nexport default SchemaGenerator;\n","/**\n * @see https://github.com/geraintluff/uri-templates\n * but with all the de-substitution stuff removed\n */\nexport const URI_TEMPLATE_GLOBAL_MODIFIERS = {\n  \"+\": true,\n  \"#\": true,\n  \".\": true,\n  \"/\": true,\n  \";\": true,\n  \"?\": true,\n  \"&\": true\n};\n\nexport const URI_TEMPLATE_SUFFICES = {\n  \"*\": true\n};\n\n// parseURI() and resolveUrl() are from https://gist.github.com/1088850\n// - released as public domain by author (\"Yaffle\") - see comments on\n// gist\nexport const parseURI = (url) => {\n  const m = String(url).replace(/^\\s+|\\s+$/g, '').match(/^([^:\\/?#]+:)?(\\/\\/(?:[^:@]*(?::[^:@]*)?@)?(([^:\\/?#]*)(?::(\\d*))?))?([^?#]*)(\\?[^#]*)?(#[\\s\\S]*)?/);\n  // authority = '//' + user + ':' + pass '@' + hostname + ':' port\n  return (m ? {\n    href     : m[0] || '',\n    protocol : m[1] || '',\n    authority: m[2] || '',\n    host     : m[3] || '',\n    hostname : m[4] || '',\n    port     : m[5] || '',\n    pathname : m[6] || '',\n    search   : m[7] || '',\n    hash     : m[8] || ''\n  } : null);\n};\n\nexport const removeDotSegments = (input) => {\n  let output = [];\n  input.replace(/^(\\.\\.?(\\/|$))+/, '')\n       .replace(/\\/(\\.(\\/|$))+/g, '/')\n       .replace(/\\/\\.\\.$/, '/../')\n       .replace(/\\/?[^\\/]*/g, function (p) {\n    if (p === '/..') {\n      output.pop();\n    } else {\n      output.push(p);\n    }\n  });\n  return output.join('').replace(/^\\//, input.charAt(0) === '/' ? '/' : '');\n};\n\nexport const resolveUrl = (base, href) => {// RFC 3986\n  href = parseURI(href || '');\n  base = parseURI(base || '');\n\n  return !href || !base ? null : (href.protocol || base.protocol) +\n  (href.protocol || href.authority ? href.authority : base.authority) +\n  removeDotSegments(href.protocol || href.authority || href.pathname.charAt(0) === '/' ? href.pathname : (href.pathname ? ((base.authority && !base.pathname ? '/' : '') + base.pathname.slice(0, base.pathname.lastIndexOf('/') + 1) + href.pathname) : base.pathname)) +\n  (href.protocol || href.authority || href.pathname ? href.search : (href.search || base.search)) +\n  href.hash;\n};\n\nexport const getDocumentUri = (uri) => {\n  return uri.split('#')[0];\n};\n\nexport const isTrustedUrl = (baseUrl, testUrl) => {\n  if(testUrl.substring(0, baseUrl.length) === baseUrl){\n    let remainder = testUrl.substring(baseUrl.length);\n    if ((testUrl.length > 0 && testUrl.charAt(baseUrl.length - 1) === \"/\") || remainder.charAt(0) === \"#\" || remainder.charAt(0) === \"?\") {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const normSchema = (schema, baseUri) => {\n  if (schema && typeof schema === \"object\") {\n    if (baseUri === undefined) {\n      baseUri = schema.id;\n    } else if (typeof schema.id === \"string\") {\n      baseUri = resolveUrl(baseUri, schema.id);\n      schema.id = baseUri;\n    }\n    if (Array.isArray(schema)) {\n      let i = 0, l = schema.length;\n      for (i = 0; i < l; i++) {\n        normSchema(schema[i], baseUri);\n      }\n    } else {\n      if (typeof schema['$ref'] === \"string\") {\n        schema['$ref'] = resolveUrl(baseUri, schema['$ref']);\n      }\n      for (let key in schema) {\n        if (key !== \"enum\") {\n          normSchema(schema[key], baseUri);\n        }\n      }\n    }\n  }\n};\n","import ValidationFramework from \"./validationFramework.js\";\nimport SchemaGenerator from \"./schemaGenerator.js\";\n\nmodule.exports.ValidationFramework = ValidationFramework;\nmodule.exports.SchemaGenerator = SchemaGenerator;\n","import SchemaGenerator from \"./schemaGenerator.js\";\nimport createApi from \"./api.js\";\nimport { ERROR_MESSAGES_DEFAULT } from \"./validationError.js\";\n\n/**\n * Augmented.ValidationFramework -\n * The Validation Framework Base Wrapper Class.\n * Provides abstraction for base validation build-in library\n */\nclass ValidationFramework {\n  constructor() {\n    this._myValidator = createApi();\n    if (this._myValidator) {\n      this._myValidator.addLanguage(\"en-us\", ERROR_MESSAGES_DEFAULT);  // changed to US\n    }\n  };\n\n  /**\n   * Returns if the framework supports validation\n   * @returns {boolean} Returns true if the framework supports validation\n   */\n  supportsValidation() {\n    return (this._myValidator !== null);\n  };\n\n  /**\n   * Registers a schema to the Framework\n   * @param {string} identity The identity of the schema\n   * @param {object} schema The JSON schema\n   * @returns {boolean} Returns true on success\n   */\n  registerSchema(identity, schema) {\n    return this._myValidator.addSchema(identity, schema);\n  };\n\n  /**\n   * Gets a schema\n   * @param {string} identity The identity of the schema\n   * @returns {object} The JSON schema\n   */\n  getSchema(identity) {\n    return this._myValidator.getSchema(identity);\n  };\n\n  /**\n   * Gets all schemas\n   * @returns {array} all JSON schemas\n   */\n  getSchemas() {\n    return this._myValidator.getSchemaMap();\n  };\n\n  /**\n   * Clears all schemas\n   */\n  clearSchemas() {\n    this._myValidator.dropSchemas();\n  };\n\n  /**\n   * Validates data via a schema\n   * @param {object} data The data to validate\n   * @param {object} schema The JSON schema\n   * @returns {object} Returns the validation object\n   */\n  validate(data, schema) {\n    return this._myValidator.validateMultiple(data, schema);\n  };\n\n  /**\n   * Validates data via a schema\n   * @returns {array} Returns the validation messages\n   */\n  getValidationMessages() {\n    return this._myValidator.error;\n  };\n\n  /**\n   * Validates data via a schema\n   * @param {Augmented.Model|object} model The model generate from\n   * @returns {object} Returns the schema\n   */\n  generateSchema(model) {\n    let data = model;\n    /*TODO support model\n    if (model && model instanceof Model) {\n      data = model.toJSON();\n    }*/\n    return SchemaGenerator(data);\n  };\n};\n\nexport default ValidationFramework;\n","import ValidatorContext from \"./validatorContext.js\";\nimport { ErrorCodeLookup, ERROR_CODES, ERROR_MESSAGES_DEFAULT } from \"./validationError.js\";\nimport { normSchema, resolveUrl, getDocumentUri } from \"./functions.js\";\n\nlet languages = {};\n\nconst createApi = (language) => {\n  const _myContext = new ValidatorContext();\n  let currentLanguage = language || 'en';\n\n  const api = {\n    addFormat: (format, validator) => {\n      _myContext.addFormat(format, validator);\n    },\n    language: (code) => {\n      if (!code) {\n        return currentLanguage;\n      }\n      if (!languages[code]) {\n        code = code.split('-')[0]; // fall back to base\n        // language\n      }\n      if (languages[code]) {\n        currentLanguage = code;\n        return code; // so you can tell if fall-back has happened\n      }\n      return false;\n    },\n    addLanguage: (code, messageMap) => {\n      let key;\n      for (key in ERROR_CODES) {\n        if (messageMap[key] && !messageMap[ERROR_CODES[key]]) {\n          messageMap[ERROR_CODES[key]] = messageMap[key];\n        }\n      }\n      let rootCode = code.split('-')[0];\n      if (!languages[rootCode]) { // use for base language if\n        // not yet defined\n        languages[code] = messageMap;\n        languages[rootCode] = messageMap;\n      } else {\n        languages[code] = Object.create(languages[rootCode]);\n        for (key in messageMap) {\n          if (typeof languages[rootCode][key] === 'undefined') {\n            languages[rootCode][key] = messageMap[key];\n          }\n          languages[code][key] = messageMap[key];\n        }\n      }\n      return this;\n    },\n    freshApi: (language) => {\n      const result = createApi();\n      if (language) {\n        result.language(language);\n      }\n      return result;\n    },\n    validate: (data, schema, checkRecursive, banUnknownProperties) => {\n      const context = new ValidatorContext(_myContext, false, languages[currentLanguage], checkRecursive, banUnknownProperties);\n      if (typeof schema === \"string\") {\n        schema = {\"$ref\": schema};\n      }\n      context.addSchema(\"\", schema);\n      let error = context.validateAll(data, schema, null, null, \"\");\n      if (!error && banUnknownProperties) {\n        error = context.banUnknownProperties();\n      }\n      this.error = error;\n      this.missing = context.missing;\n      this.valid = (error === null);\n      return this.valid;\n    },\n    validateResult: () => {\n      let result = {};\n      this.validate.apply(result, arguments);\n      return result;\n    },\n    validateMultiple: (data, schema, checkRecursive, banUnknownProperties) => {\n      const context = new ValidatorContext(_myContext, true, languages[currentLanguage], checkRecursive, banUnknownProperties);\n      if (typeof schema === \"string\") {\n        schema = {\"$ref\": schema};\n      }\n      context.addSchema(\"\", schema);\n      context.validateAll(data, schema, null, null, \"\");\n      if (banUnknownProperties) {\n        context.banUnknownProperties();\n      }\n      let result = {};\n      result.errors = context.errors;\n      result.missing = context.missing;\n      result.valid = (result.errors.length === 0);\n      return result;\n    },\n    addSchema: (url, schema) => {\n      return _myContext.addSchema(url, schema);\n    },\n    getSchema: (url, urlHistory) => {\n      return _myContext.getSchema(url, urlHistory);\n    },\n    getSchemaMap: () => {\n      return _myContext.getSchemaMap.apply(_myContext, arguments);\n    },\n    getSchemaUris: () => {\n      return _myContext.getSchemaUris.apply(_myContext, arguments);\n    },\n    getMissingUris: () => {\n      return _myContext.getMissingUris.apply(_myContext, arguments);\n    },\n    dropSchemas: () => {\n      _myContext.dropSchemas.apply(_myContext, arguments);\n    },\n    defineKeyword: () => {\n      _myContext.defineKeyword.apply(_myContext, arguments);\n    },\n    defineError: (codeName, codeNumber, defaultMessage) => {\n      if (typeof codeName !== 'string' || !/^[A-Z]+(_[A-Z]+)*$/.test(codeName)) {\n        // TODO message bundle this\n        throw new Error('Code name must be a string in UPPER_CASE_WITH_UNDERSCORES');\n      }\n      if (typeof codeNumber !== 'number' || codeNumber%1 !== 0 || codeNumber < 10000) {\n        // TODO message bundle this\n        throw new Error('Code number must be an integer > 10000');\n      }\n      if (typeof ERROR_CODES[codeName] !== 'undefined') {\n        // TODO message bundle this\n        throw new Error('Error already defined: ' + codeName + ' as ' + ERROR_CODES[codeName]);\n      }\n      if (typeof ErrorCodeLookup[codeNumber] !== 'undefined') {\n        // TODO message bundle this\n        throw new Error('Error code already used: ' + ErrorCodeLookup[codeNumber] + ' as ' + codeNumber);\n      }\n      ERROR_CODES[codeName] = codeNumber;\n      ErrorCodeLookup[codeNumber] = codeName;\n      ERROR_MESSAGES_DEFAULT[codeName] = ERROR_MESSAGES_DEFAULT[codeNumber] = defaultMessage;\n      for (let langCode in languages) {\n        let language = languages[langCode];\n        if (language[codeName]) {\n          language[codeNumber] = language[codeNumber] || language[codeName];\n        }\n      }\n    },\n    reset: () => {\n      _myContext.reset();\n      this.error = null;\n      this.missing = [];\n      this.valid = true;\n    },\n    missing: [],\n    error: null,\n    valid: true,\n    normSchema: normSchema,\n    resolveUrl: resolveUrl,\n    getDocumentUri: getDocumentUri,\n    errorCodes: ERROR_CODES\n  };\n  return api;\n};\n\nexport default createApi;\n","import { ValidationError, ERROR_CODES, ERROR_MESSAGES_DEFAULT } from \"./validationError.js\";\nimport { normSchema, getDocumentUri } from \"./functions.js\";\n\nlet CLOSE_ENOUGH_LOW = Math.pow(2, -51);\nlet CLOSE_ENOUGH_HIGH = 1 - CLOSE_ENOUGH_LOW;\n\nclass ValidatorContext {\n  constructor(parent, collectMultiple, errorMessages, checkRecursive, trackUnknownProperties) {\n    this.missing = [];\n    this.missingMap = {};\n    this.formatValidators = parent ? Object.create(parent.formatValidators) : {};\n    this.schemas = parent ? Object.create(parent.schemas) : {};\n    this.collectMultiple = collectMultiple;\n    this.errors = [];\n    this.handleError = collectMultiple ? this.collectError : this.returnError;\n    if (checkRecursive) {\n      this.checkRecursive = true;\n      this.scanned = [];\n      this.scannedFrozen = [];\n      this.scannedFrozenSchemas = [];\n      this.scannedFrozenValidationErrors = [];\n      this.validatedSchemasKey = 'tv4_validation_id';\n      this.validationErrorsKey = 'tv4_validation_errors_id';\n    }\n    if (trackUnknownProperties) {\n      this.trackUnknownProperties = true;\n      this.knownPropertyPaths = {};\n      this.unknownPropertyPaths = {};\n    }\n    this.errorMessages = errorMessages;\n    this.definedKeywords = {};\n    if (parent) {\n      for (let key in parent.definedKeywords) {\n        this.definedKeywords[key] = parent.definedKeywords[key].slice(0);\n      }\n    }\n  };\n\n  notReallyPercentEncode(string) {\n    return encodeURI(string).replace(/%25[0-9][0-9]/g, (doubleEncoded) => {\n      return \"%\" + doubleEncoded.substring(3);\n    });\n  };\n\n  uriTemplateSubstitution(spec) {\n    let modifier = \"\";\n    if (URI_TEMPLATE_GLOBAL_MODIFIERS[spec.charAt(0)]) {\n      modifier = spec.charAt(0);\n      spec = spec.substring(1);\n    }\n    let separator = \"\";\n    let prefix = \"\";\n    let shouldEscape = true;\n    let showVariables = false;\n    let trimEmptyString = false;\n    if (modifier === '+') {\n      shouldEscape = false;\n    } else if (modifier === \".\") {\n      prefix = \".\";\n      separator = \".\";\n    } else if (modifier === \"/\") {\n      prefix = \"/\";\n      separator = \"/\";\n    } else if (modifier === '#') {\n      prefix = \"#\";\n      shouldEscape = false;\n    } else if (modifier === ';') {\n      prefix = \";\";\n      separator = \";\";\n      showVariables = true;\n      trimEmptyString = true;\n    } else if (modifier === '?') {\n      prefix = \"?\";\n      separator = \"&\";\n      showVariables = true;\n    } else if (modifier === '&') {\n      prefix = \"&\";\n      separator = \"&\";\n      showVariables = true;\n    }\n\n    let varNames = [];\n    let varList = spec.split(\",\");\n    let varSpecs = [];\n    let varSpecMap = {};\n    let i = 0, l = varList.length;\n    for (i = 0; i < l; i++) {\n      let varName = varList[i];\n      let truncate = null;\n      if (varName.indexOf(\":\") !== -1) {\n        let parts = varName.split(\":\");\n        varName = parts[0];\n        truncate = parseInt(parts[1], 10);\n      }\n      let suffices = {};\n      while (URI_TEMPLATE_SUFFICES[varName.charAt(varName.length - 1)]) {\n        suffices[varName.charAt(varName.length - 1)] = true;\n        varName = varName.substring(0, varName.length - 1);\n      }\n      let varSpec = {\n        truncate: truncate,\n        name: varName,\n        suffices: suffices\n      };\n      varSpecs.push(varSpec);\n      varSpecMap[varName] = varSpec;\n      varNames.push(varName);\n    }\n\n    const subFunction = (valueFunction) => {\n      let result = \"\";\n      let startIndex = 0;\n      let i = 0, l = varSpecs.length;\n      for (i = 0; i < l; i++) {\n        let varSpec = varSpecs[i];\n\n        if (!valueFunction && !isFunction(valueFunction)) {\n          throw new Error(\"Problem qith value function.\");\n        }\n\n        let value = valueFunction(varSpec.name);\n        if (value === null || value === undefined || (Array.isArray(value) && value.length === 0) || (typeof value === 'object' && Object.keys(value).length === 0)) {\n          startIndex++;\n          continue;\n        }\n        if (i === startIndex) {\n          result += prefix;\n        } else {\n          result += (separator || \",\");\n        }\n        if (Array.isArray(value)) {\n          if (showVariables) {\n            result += varSpec.name + \"=\";\n          }\n          let j = 0;\n          l = value.length;\n          for (j = 0; j < l; j++) {\n            if (j > 0) {\n              result += varSpec.suffices['*'] ? (separator || \",\") : \",\";\n              if (varSpec.suffices['*'] && showVariables) {\n                result += varSpec.name + \"=\";\n              }\n            }\n            result += shouldEscape ? encodeURIComponent(value[j]).replace(/!/g, \"%21\") : this.notReallyPercentEncode(value[j]);\n          }\n        } else if (typeof value === \"object\") {\n          if (showVariables && !varSpec.suffices['*']) {\n            result += varSpec.name + \"=\";\n          }\n          let first = true;\n          for (let key in value) {\n            if (!first) {\n              result += varSpec.suffices['*'] ? (separator || \",\") : \",\";\n            }\n            first = false;\n            result += shouldEscape ? encodeURIComponent(key).replace(/!/g, \"%21\") : this.notReallyPercentEncode(key);\n            result += varSpec.suffices['*'] ? '=' : \",\";\n            result += shouldEscape ? encodeURIComponent(value[key]).replace(/!/g, \"%21\") : this.notReallyPercentEncode(value[key]);\n          }\n        } else {\n          if (showVariables) {\n            result += varSpec.name;\n            if (!trimEmptyString || value !== \"\") {\n              result += \"=\";\n            }\n          }\n          if (varSpec.truncate !== null) {\n            value = value.substring(0, varSpec.truncate);\n          }\n          result += shouldEscape ? encodeURIComponent(value).replace(/!/g, \"%21\"): this.notReallyPercentEncode(value);\n        }\n      }\n      return result;\n    };\n    subFunction.varNames = varNames;\n    return {\n      prefix: prefix,\n      substitution: subFunction\n    };\n  };\n\n  recursiveCompare(A, B) {\n    if (A === B) {\n      return true;\n    }\n    if (typeof A === \"object\" && typeof B === \"object\") {\n      if (Array.isArray(A) !== Array.isArray(B)) {\n        return false;\n      } else if (Array.isArray(A)) {\n        if (A.length !== B.length) {\n          return false;\n        }\n        let i = 0, l = A.length;\n        for (i = 0; i < l; i++) {\n          if (!this.recursiveCompare(A[i], B[i])) {\n            return false;\n          }\n        }\n      } else {\n        let key;\n        for (key in A) {\n          if (B[key] === undefined && A[key] !== undefined) {\n            return false;\n          }\n        }\n        for (key in B) {\n          if (A[key] === undefined && B[key] !== undefined) {\n            return false;\n          }\n        }\n        for (key in A) {\n          if (!this.recursiveCompare(A[key], B[key])) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  };\n\n  defineKeyword(keyword, keywordFunction) {\n    this.definedKeywords[keyword] = this.definedKeywords[keyword] || [];\n    this.definedKeywords[keyword].push(keywordFunction);\n  };\n\n  createError(code, messageParams, dataPath, schemaPath, subErrors) {\n    let messageTemplate = this.errorMessages[code] || ERROR_MESSAGES_DEFAULT[code];\n    if (typeof messageTemplate !== 'string') {\n      return new ValidationError(code, \"Unknown error code \" + code + \": \" + JSON.stringify(messageParams), messageParams, dataPath, schemaPath, subErrors);\n    }\n    // Adapted from Crockford's supplant()\n    let message = messageTemplate.replace(/\\{([^{}]*)\\}/g, function (whole, varName) {\n      let subValue = messageParams[varName];\n      return typeof subValue === 'string' || typeof subValue === 'number' ? subValue : whole;\n    });\n    return new ValidationError(code, message, messageParams, dataPath, schemaPath, subErrors);\n  };\n  returnError(error) {\n    return error;\n  };\n\n  collectError(error) {\n    if (error) {\n      this.errors.push(error);\n    }\n    return null;\n  };\n\n  prefixErrors(startIndex, dataPath, schemaPath) {\n    let i = 0, l = this.errors.length;\n    for (i = startIndex; i < l; i++) {\n      this.errors[i] = this.errors[i].prefixWith(dataPath, schemaPath);\n    }\n    return this;\n  };\n\n  banUnknownProperties() {\n    for (let unknownPath in this.unknownPropertyPaths) {\n      let error = this.createError(ERROR_CODES.UNKNOWN_PROPERTY, {path: unknownPath}, unknownPath, \"\");\n      let result = this.handleError(error);\n      if (result) {\n        return result;\n      }\n    }\n    return null;\n  };\n  addFormat(format, validator) {\n    if (typeof format === 'object') {\n      for (let key in format) {\n        this.addFormat(key, format[key]);\n      }\n      return this;\n    }\n    this.formatValidators[format] = validator;\n  };\n  resolveRefs(schema, urlHistory) {\n    if (schema['$ref'] !== undefined) {\n      urlHistory = urlHistory || {};\n      if (urlHistory[schema['$ref']]) {\n        return this.createError(ERROR_CODES.CIRCULAR_REFERENCE, {urls: Object.keys(urlHistory).join(', ')}, '', '');\n      }\n      urlHistory[schema['$ref']] = true;\n      schema = this.getSchema(schema['$ref'], urlHistory);\n    }\n    return schema;\n  };\n  getSchema(url, urlHistory) {\n    let schema;\n    if (this.schemas[url] !== undefined) {\n      schema = this.schemas[url];\n      return this.resolveRefs(schema, urlHistory);\n    }\n    let baseUrl = url;\n    let fragment = \"\";\n    if (url.indexOf('#') !== -1) {\n      fragment = url.substring(url.indexOf(\"#\") + 1);\n      baseUrl = url.substring(0, url.indexOf(\"#\"));\n    }\n    if (typeof this.schemas[baseUrl] === 'object') {\n      schema = this.schemas[baseUrl];\n      let pointerPath = decodeURIComponent(fragment);\n      if (pointerPath === \"\") {\n        return this.resolveRefs(schema, urlHistory);\n      } else if (pointerPath.charAt(0) !== \"/\") {\n        return undefined;\n      }\n      let parts = pointerPath.split(\"/\").slice(1);\n      let i = 0, l = parts.length;\n      for (i = 0; i < l; i++) {\n        let component = parts[i].replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n        if (schema[component] === undefined) {\n          schema = undefined;\n          break;\n        }\n        schema = schema[component];\n      }\n      if (schema !== undefined) {\n        return this.resolveRefs(schema, urlHistory);\n      }\n    }\n    if (this.missing[baseUrl] === undefined) {\n      this.missing.push(baseUrl);\n      this.missing[baseUrl] = baseUrl;\n      this.missingMap[baseUrl] = baseUrl;\n    }\n  };\n  searchSchemas(schema, url) {\n    if (Array.isArray(schema)) {\n      let i = 0, l = schema.length;\n      for (i = 0; i < l; i++) {\n        this.searchSchemas(schema[i], url);\n      }\n    } else if (schema && typeof schema === \"object\") {\n      if (typeof schema.id === \"string\") {\n        if (isTrustedUrl(url, schema.id)) {\n          if (this.schemas[schema.id] === undefined) {\n            this.schemas[schema.id] = schema;\n          }\n        }\n      }\n      for (let key in schema) {\n        if (key !== \"enum\") {\n          if (typeof schema[key] === \"object\") {\n            this.searchSchemas(schema[key], url);\n          } else if (key === \"$ref\") {\n            let uri = getDocumentUri(schema[key]);\n            if (uri && this.schemas[uri] === undefined && this.missingMap[uri] === undefined) {\n              this.missingMap[uri] = uri;\n            }\n          }\n        }\n      }\n    }\n  };\n  addSchema(url, schema) {\n    // overload\n    if (typeof url !== 'string' || typeof schema === 'undefined') {\n      if (typeof url === 'object' && typeof url.id === 'string') {\n        schema = url;\n        url = schema.id;\n      } else {\n        return;\n      }\n    }\n    if (url === getDocumentUri(url) + \"#\") {\n      // Remove empty fragment\n      url = getDocumentUri(url);\n    }\n    this.schemas[url] = schema;\n    delete this.missingMap[url];\n    normSchema(schema, url);\n    this.searchSchemas(schema, url);\n  };\n\n  getSchemaMap() {\n    let map = {};\n    for (let key in this.schemas) {\n      map[key] = this.schemas[key];\n    }\n    return map;\n  };\n\n  getSchemaUris(filterRegExp) {\n    let list = [];\n    for (let key in this.schemas) {\n      if (!filterRegExp || filterRegExp.test(key)) {\n        list.push(key);\n      }\n    }\n    return list;\n  };\n\n  getMissingUris(filterRegExp) {\n    let list = [];\n    for (let key in this.missingMap) {\n      if (!filterRegExp || filterRegExp.test(key)) {\n        list.push(key);\n      }\n    }\n    return list;\n  };\n\n  dropSchemas() {\n    this.schemas = {};\n    this.reset();\n  };\n\n  reset() {\n    this.missing = [];\n    this.missingMap = {};\n    this.errors = [];\n  };\n\n  validateAll(data, schema, dataPathParts, schemaPathParts, dataPointerPath) {\n    let topLevel;\n    schema = this.resolveRefs(schema);\n\n    if (!schema) {\n      return null;\n    } else if (schema instanceof ValidationError) {\n      this.errors.push(schema);\n      return schema;\n    }\n\n    let startErrorCount = this.errors.length;\n    let frozenIndex, scannedFrozenSchemaIndex = null, scannedSchemasIndex = null;\n    if (this.checkRecursive && data && typeof data === 'object') {\n      topLevel = !this.scanned.length;\n      if (data[this.validatedSchemasKey]) {\n        let schemaIndex = data[this.validatedSchemasKey].indexOf(schema);\n        if (schemaIndex !== -1) {\n          this.errors = this.errors.concat(data[this.validationErrorsKey][schemaIndex]);\n          return null;\n        }\n      }\n      if (Object.isFrozen(data)) {\n        frozenIndex = this.scannedFrozen.indexOf(data);\n        if (frozenIndex !== -1) {\n          let frozenSchemaIndex = this.scannedFrozenSchemas[frozenIndex].indexOf(schema);\n          if (frozenSchemaIndex !== -1) {\n            this.errors = this.errors.concat(this.scannedFrozenValidationErrors[frozenIndex][frozenSchemaIndex]);\n            return null;\n          }\n        }\n      }\n      this.scanned.push(data);\n      if (Object.isFrozen(data)) {\n        if (frozenIndex === -1) {\n          frozenIndex = this.scannedFrozen.length;\n          this.scannedFrozen.push(data);\n          this.scannedFrozenSchemas.push([]);\n        }\n        scannedFrozenSchemaIndex = this.scannedFrozenSchemas[frozenIndex].length;\n        this.scannedFrozenSchemas[frozenIndex][scannedFrozenSchemaIndex] = schema;\n        this.scannedFrozenValidationErrors[frozenIndex][scannedFrozenSchemaIndex] = [];\n      } else {\n        if (!data[this.validatedSchemasKey]) {\n          try {\n            Object.defineProperty(data, this.validatedSchemasKey, {\n              value: [],\n              configurable: true\n            });\n            Object.defineProperty(data, this.validationErrorsKey, {\n              value: [],\n              configurable: true\n            });\n          } catch (e) {\n            // IE 7/8 workaround\n            data[this.validatedSchemasKey] = [];\n            data[this.validationErrorsKey] = [];\n          }\n        }\n        scannedSchemasIndex = data[this.validatedSchemasKey].length;\n        data[this.validatedSchemasKey][scannedSchemasIndex] = schema;\n        data[this.validationErrorsKey][scannedSchemasIndex] = [];\n      }\n    }\n\n    let errorCount = this.errors.length;\n    let error = this.validateBasic(data, schema, dataPointerPath) || this.validateNumeric(data, schema, dataPointerPath) || this.validateString(data, schema, dataPointerPath) || this.validateArray(data, schema, dataPointerPath) || this.validateObject(data, schema, dataPointerPath) || this.validateCombinations(data, schema, dataPointerPath) || this.validateHypermedia(data, schema, dataPointerPath) || this.validateFormat(data, schema, dataPointerPath) || this.validateDefinedKeywords(data, schema, dataPointerPath) || null;\n\n    if (topLevel) {\n      while (this.scanned.length) {\n        let item = this.scanned.pop();\n        delete item[this.validatedSchemasKey];\n      }\n      this.scannedFrozen = [];\n      this.scannedFrozenSchemas = [];\n    }\n\n    if (error || errorCount !== this.errors.length) {\n      while ((dataPathParts && dataPathParts.length) || (schemaPathParts && schemaPathParts.length)) {\n        let dataPart = (dataPathParts && dataPathParts.length) ? \"\" + dataPathParts.pop() : null;\n        let schemaPart = (schemaPathParts && schemaPathParts.length) ? \"\" + schemaPathParts.pop() : null;\n        if (error) {\n          error = error.prefixWith(dataPart, schemaPart);\n        }\n        this.prefixErrors(errorCount, dataPart, schemaPart);\n      }\n    }\n\n    if (scannedFrozenSchemaIndex !== null) {\n      this.scannedFrozenValidationErrors[frozenIndex][scannedFrozenSchemaIndex] = this.errors.slice(startErrorCount);\n    } else if (scannedSchemasIndex !== null) {\n      data[this.validationErrorsKey][scannedSchemasIndex] = this.errors.slice(startErrorCount);\n    }\n\n    return this.handleError(error);\n  };\n\n  validateFormat(data, schema) {\n    if (typeof schema.format !== 'string' || !this.formatValidators[schema.format]) {\n      return null;\n    }\n    let errorMessage = this.formatValidators[schema.format].call(null, data, schema);\n    if (typeof errorMessage === 'string' || typeof errorMessage === 'number') {\n      return this.createError(ERROR_CODES.FORMAT_CUSTOM, {message: errorMessage}).prefixWith(null, \"format\");\n    } else if (errorMessage && typeof errorMessage === 'object') {\n      return this.createError(ERROR_CODES.FORMAT_CUSTOM, {message: errorMessage.message || \"?\"}, errorMessage.dataPath || null, errorMessage.schemaPath || \"/format\");\n    }\n    return null;\n  };\n\n  validateDefinedKeywords(data, schema, dataPointerPath) {\n    for (let key in this.definedKeywords) {\n      if (typeof schema[key] === 'undefined') {\n        continue;\n      }\n      let validationFunctions = this.definedKeywords[key];\n      let i = 0, l = validationFunctions.length;\n      for (i = 0; i < l; i++) {\n        let func = validationFunctions[i];\n        let result = func(data, schema[key], schema, dataPointerPath);\n        if (typeof result === 'string' || typeof result === 'number') {\n          return this.createError(ERROR_CODES.KEYWORD_CUSTOM, {key: key, message: result}).prefixWith(null, \"format\");\n        } else if (result && typeof result === 'object') {\n          let code = result.code;\n          if (typeof code === 'string') {\n            if (!ERROR_CODES[code]) {\n              throw new Error('Undefined error code (use defineError): ' + code);\n            }\n            code = ERROR_CODES[code];\n          } else if (typeof code !== 'number') {\n            code = ERROR_CODES.KEYWORD_CUSTOM;\n          }\n          let messageParams = (typeof result.message === 'object') ? result.message : {key: key, message: result.message || \"?\"};\n          let schemaPath = result.schemaPath ||( \"/\" + key.replace(/~/g, '~0').replace(/\\//g, '~1'));\n          return this.createError(code, messageParams, result.dataPath || null, schemaPath);\n        }\n      }\n    }\n    return null;\n  };\n\n  validateBasic(data, schema, dataPointerPath) {\n    let error = this.validateType(data, schema, dataPointerPath);\n    if (error) {\n      return error.prefixWith(null, \"type\");\n    }\n      /*if (error = this.validateEnum(data, schema, dataPointerPath)) {\n      return error.prefixWith(null, \"type\");\n    }*/\n    return null;\n  };\n\n  validateType(data, schema) {\n    if (schema.type === undefined) {\n      return null;\n    }\n    let dataType = typeof data;\n    if (data === null) {\n      dataType = \"null\";\n    } else if (Array.isArray(data)) {\n      dataType = \"array\";\n    }\n    let allowedTypes = schema.type;\n    if (typeof allowedTypes !== \"object\") {\n      allowedTypes = [allowedTypes];\n    }\n\n    let i = 0, l = allowedTypes.length;\n    for (i = 0; i < l; i++) {\n      let type = allowedTypes[i];\n      if (type === dataType || (type === \"integer\" && dataType === \"number\" && (data % 1 === 0))) {\n        return null;\n      }\n    }\n    return this.createError(ERROR_CODES.INVALID_TYPE, {type: dataType, expected: allowedTypes.join(\"/\")});\n  };\n\n  validateEnum(data, schema) {\n    if (schema[\"enum\"] === undefined) {\n      return null;\n    }\n    let i = 0, l = schema[\"enum\"].length;\n    for (i = 0; i < l; i++) {\n      let enumVal = schema[\"enum\"][i];\n      if (this.recursiveCompare(data, enumVal)) {\n        return null;\n      }\n    }\n    return this.createError(ERROR_CODES.ENUM_MISMATCH, {value: (typeof JSON !== 'undefined') ? JSON.stringify(data) : data});\n  };\n\n  validateNumeric(data, schema, dataPointerPath) {\n    return this.validateMultipleOf(data, schema, dataPointerPath) || this.validateMinMax(data, schema, dataPointerPath) || this.validateNaN(data, schema, dataPointerPath) || null;\n  };\n\n  validateMultipleOf(data, schema) {\n    let multipleOf = schema.multipleOf || schema.divisibleBy;\n    if (multipleOf === undefined) {\n      return null;\n    }\n    if (typeof data === \"number\") {\n      let remainder = (data/multipleOf)%1;\n      if (remainder >= CLOSE_ENOUGH_LOW && remainder < CLOSE_ENOUGH_HIGH) {\n        return this.createError(ERROR_CODES.NUMBER_MULTIPLE_OF, {value: data, multipleOf: multipleOf});\n      }\n    }\n    return null;\n  };\n\n  validateMinMax(data, schema) {\n    if (typeof data !== \"number\") {\n      return null;\n    }\n    if (schema.minimum !== undefined) {\n      if (data < schema.minimum) {\n        return this.createError(ERROR_CODES.NUMBER_MINIMUM, {value: data, minimum: schema.minimum}).prefixWith(null, \"minimum\");\n      }\n      if (schema.exclusiveMinimum && data === schema.minimum) {\n        return this.createError(ERROR_CODES.NUMBER_MINIMUM_EXCLUSIVE, {value: data, minimum: schema.minimum}).prefixWith(null, \"exclusiveMinimum\");\n      }\n    }\n    if (schema.maximum !== undefined) {\n      if (data > schema.maximum) {\n        return this.createError(ERROR_CODES.NUMBER_MAXIMUM, {value: data, maximum: schema.maximum}).prefixWith(null, \"maximum\");\n      }\n      if (schema.exclusiveMaximum && data === schema.maximum) {\n        return this.createError(ERROR_CODES.NUMBER_MAXIMUM_EXCLUSIVE, {value: data, maximum: schema.maximum}).prefixWith(null, \"exclusiveMaximum\");\n      }\n    }\n    return null;\n  };\n\n  validateNaN(data) {\n    if (typeof data !== \"number\") {\n      return null;\n    }\n    if (isNaN(data) === true || data === Infinity || data === -Infinity) {\n      return this.createError(ERROR_CODES.NUMBER_NOT_A_NUMBER, {value: data}).prefixWith(null, \"type\");\n    }\n    return null;\n  };\n\n  validateString(data, schema, dataPointerPath) {\n    return this.validateStringLength(data, schema, dataPointerPath) || this.validateStringPattern(data, schema, dataPointerPath) || null;\n  };\n\n  validateStringLength(data, schema) {\n    if (typeof data !== \"string\") {\n      return null;\n    }\n    if (schema.minLength !== undefined) {\n      if (data.length < schema.minLength) {\n        return this.createError(ERROR_CODES.STRING_LENGTH_SHORT, {length: data.length, minimum: schema.minLength}).prefixWith(null, \"minLength\");\n      }\n    }\n    if (schema.maxLength !== undefined) {\n      if (data.length > schema.maxLength) {\n        return this.createError(ERROR_CODES.STRING_LENGTH_LONG, {length: data.length, maximum: schema.maxLength}).prefixWith(null, \"maxLength\");\n      }\n    }\n    return null;\n  };\n\n  validateStringPattern(data, schema) {\n    if (typeof data !== \"string\" || schema.pattern === undefined) {\n      return null;\n    }\n    let regexp = new RegExp(schema.pattern);\n    if (!regexp.test(data)) {\n      return this.createError(ERROR_CODES.STRING_PATTERN, {pattern: schema.pattern}).prefixWith(null, \"pattern\");\n    }\n    return null;\n  };\n  validateArray(data, schema, dataPointerPath) {\n    if (!Array.isArray(data)) {\n      return null;\n    }\n    return this.validateArrayLength(data, schema, dataPointerPath) || this.validateArrayUniqueItems(data, schema, dataPointerPath) || this.validateArrayItems(data, schema, dataPointerPath) || null;\n  };\n\n  validateArrayLength(data, schema) {\n    let error;\n    if (schema.minItems !== undefined) {\n      if (data.length < schema.minItems) {\n        error = (this.createError(ERROR_CODES.ARRAY_LENGTH_SHORT, {length: data.length, minimum: schema.minItems})).prefixWith(null, \"minItems\");\n        if (this.handleError(error)) {\n          return error;\n        }\n      }\n    }\n    if (schema.maxItems !== undefined) {\n      if (data.length > schema.maxItems) {\n        error = (this.createError(ERROR_CODES.ARRAY_LENGTH_LONG, {length: data.length, maximum: schema.maxItems})).prefixWith(null, \"maxItems\");\n        if (this.handleError(error)) {\n          return error;\n        }\n      }\n    }\n    return null;\n  };\n\n  validateArrayUniqueItems(data, schema) {\n    if (schema.uniqueItems) {\n      let i = 0, l = data.length;\n      for (i = 0; i < l; i++) {\n        let j = 0;\n        for (j = i + 1; j < l; j++) {\n          if (recursiveCompare(data[i], data[j])) {\n            let error = (this.createError(ERROR_CODES.ARRAY_UNIQUE, {match1: i, match2: j})).prefixWith(null, \"uniqueItems\");\n            if (this.handleError(error)) {\n              return error;\n            }\n          }\n        }\n      }\n    }\n    return null;\n  };\n\n  validateArrayItems(data, schema, dataPointerPath) {\n    if (schema.items === undefined) {\n      return null;\n    }\n    let error, i;\n    if (Array.isArray(schema.items)) {\n      let l = data.length;\n      for (i = 0; i < l; i++) {\n        if (i < schema.items.length) {\n          if (error = this.validateAll(data[i], schema.items[i], [i], [\"items\", i], dataPointerPath + \"/\" + i)) {\n            return error;\n          }\n        } else if (schema.additionalItems !== undefined) {\n          if (typeof schema.additionalItems === \"boolean\") {\n            if (!schema.additionalItems) {\n              error = (this.createError(ERROR_CODES.ARRAY_ADDITIONAL_ITEMS, {})).prefixWith(\"\" + i, \"additionalItems\");\n              if (this.handleError(error)) {\n                return error;\n              }\n            }\n          } else if (error = this.validateAll(data[i], schema.additionalItems, [i], [\"additionalItems\"], dataPointerPath + \"/\" + i)) {\n            return error;\n          }\n        }\n      }\n    } else {\n      let l = data.length;\n      for (i = 0; i < l; i++) {\n        if (error = this.validateAll(data[i], schema.items, [i], [\"items\"], dataPointerPath + \"/\" + i)) {\n          return error;\n        }\n      }\n    }\n    return null;\n  };\n\n  validateObject(data, schema, dataPointerPath) {\n    if (typeof data !== \"object\" || data === null || Array.isArray(data)) {\n      return null;\n    }\n    return this.validateObjectMinMaxProperties(data, schema, dataPointerPath) || this.validateObjectRequiredProperties(data, schema, dataPointerPath) || this.validateObjectProperties(data, schema, dataPointerPath) || this.validateObjectDependencies(data, schema, dataPointerPath) || null;\n  };\n\n  validateObjectMinMaxProperties(data, schema) {\n    let keys = Object.keys(data);\n    let error;\n    if (schema.minProperties !== undefined) {\n      if (keys.length < schema.minProperties) {\n        error = this.createError(ERROR_CODES.OBJECT_PROPERTIES_MINIMUM, {propertyCount: keys.length, minimum: schema.minProperties}).prefixWith(null, \"minProperties\");\n        if (this.handleError(error)) {\n          return error;\n        }\n      }\n    }\n    if (schema.maxProperties !== undefined) {\n      if (keys.length > schema.maxProperties) {\n        error = this.createError(ERROR_CODES.OBJECT_PROPERTIES_MAXIMUM, {propertyCount: keys.length, maximum: schema.maxProperties}).prefixWith(null, \"maxProperties\");\n        if (this.handleError(error)) {\n          return error;\n        }\n      }\n    }\n    return null;\n  };\n\n  validateObjectRequiredProperties(data, schema) {\n    if (schema.required !== undefined) {\n      let i = 0, l = schema.required.length;\n      for (i = 0; i < l; i++) {\n        let key = schema.required[i];\n        if (data[key] === undefined) {\n          let error = this.createError(ERROR_CODES.OBJECT_REQUIRED, {key: key}).prefixWith(null, \"\" + i).prefixWith(null, \"required\");\n          if (this.handleError(error)) {\n            return error;\n          }\n        }\n      }\n    }\n    return null;\n  };\n\n  validateObjectProperties(data, schema, dataPointerPath) {\n    let error;\n    for (let key in data) {\n      let keyPointerPath = dataPointerPath + \"/\" + key.replace(/~/g, '~0').replace(/\\//g, '~1');\n      let foundMatch = false;\n      if (schema.properties !== undefined && schema.properties[key] !== undefined) {\n        foundMatch = true;\n        if (error = this.validateAll(data[key], schema.properties[key], [key], [\"properties\", key], keyPointerPath)) {\n          return error;\n        }\n      }\n      if (schema.patternProperties !== undefined) {\n        for (let patternKey in schema.patternProperties) {\n          let regexp = new RegExp(patternKey);\n          if (regexp.test(key)) {\n            foundMatch = true;\n            if (error = this.validateAll(data[key], schema.patternProperties[patternKey], [key], [\"patternProperties\", patternKey], keyPointerPath)) {\n              return error;\n            }\n          }\n        }\n      }\n      if (!foundMatch) {\n        if (schema.additionalProperties !== undefined) {\n          if (this.trackUnknownProperties) {\n            this.knownPropertyPaths[keyPointerPath] = true;\n            delete this.unknownPropertyPaths[keyPointerPath];\n          }\n          if (typeof schema.additionalProperties === \"boolean\") {\n            if (!schema.additionalProperties) {\n              error = this.createError(ERROR_CODES.OBJECT_ADDITIONAL_PROPERTIES, {}).prefixWith(key, \"additionalProperties\");\n              if (this.handleError(error)) {\n                return error;\n              }\n            }\n          } else {\n            if (error = this.validateAll(data[key], schema.additionalProperties, [key], [\"additionalProperties\"], keyPointerPath)) {\n              return error;\n            }\n          }\n        } else if (this.trackUnknownProperties && !this.knownPropertyPaths[keyPointerPath]) {\n          this.unknownPropertyPaths[keyPointerPath] = true;\n        }\n      } else if (this.trackUnknownProperties) {\n        this.knownPropertyPaths[keyPointerPath] = true;\n        delete this.unknownPropertyPaths[keyPointerPath];\n      }\n    }\n    return null;\n  };\n\n  validateObjectDependencies(data, schema, dataPointerPath) {\n    let error;\n    if (schema.dependencies !== undefined) {\n      for (let depKey in schema.dependencies) {\n        if (data[depKey] !== undefined) {\n          let dep = schema.dependencies[depKey];\n          if (typeof dep === \"string\") {\n            if (data[dep] === undefined) {\n              error = this.createError(ERROR_CODES.OBJECT_DEPENDENCY_KEY, {key: depKey, missing: dep}).prefixWith(null, depKey).prefixWith(null, \"dependencies\");\n              if (this.handleError(error)) {\n                return error;\n              }\n            }\n          } else if (Array.isArray(dep)) {\n            let i = 0, l = dep.lenth;\n            for (i = 0; i < l; i++) {\n              let requiredKey = dep[i];\n              if (data[requiredKey] === undefined) {\n                error = this.createError(ERROR_CODES.OBJECT_DEPENDENCY_KEY, {key: depKey, missing: requiredKey}).prefixWith(null, \"\" + i).prefixWith(null, depKey).prefixWith(null, \"dependencies\");\n                if (this.handleError(error)) {\n                  return error;\n                }\n              }\n            }\n          } else {\n            if (error = this.validateAll(data, dep, [], [\"dependencies\", depKey], dataPointerPath)) {\n              return error;\n            }\n          }\n        }\n      }\n    }\n    return null;\n  };\n\n  validateCombinations(data, schema, dataPointerPath) {\n    return this.validateAllOf(data, schema, dataPointerPath) || this.validateAnyOf(data, schema, dataPointerPath) || this.validateOneOf(data, schema, dataPointerPath) || this.validateNot(data, schema, dataPointerPath) || null;\n  };\n\n  validateAllOf(data, schema, dataPointerPath) {\n    if (schema.allOf === undefined) {\n      return null;\n    }\n    let error;\n    let i = 0, l = schema.allOf.length;\n    for (i = 0; i < l; i++) {\n      let subSchema = schema.allOf[i];\n      if (error = this.validateAll(data, subSchema, [], [\"allOf\", i], dataPointerPath)) {\n        return error;\n      }\n    }\n    return null;\n  };\n\n  validateAnyOf(data, schema, dataPointerPath) {\n    if (schema.anyOf === undefined) {\n      return null;\n    }\n    let errors = [];\n    let startErrorCount = this.errors.length;\n    let oldUnknownPropertyPaths, oldKnownPropertyPaths;\n    if (this.trackUnknownProperties) {\n      oldUnknownPropertyPaths = this.unknownPropertyPaths;\n      oldKnownPropertyPaths = this.knownPropertyPaths;\n    }\n    let errorAtEnd = true;\n    let i = 0, l = schema.anyOf.length;\n    for (i = 0; i < l; i++) {\n      if (this.trackUnknownProperties) {\n        this.unknownPropertyPaths = {};\n        this.knownPropertyPaths = {};\n      }\n      let subSchema = schema.anyOf[i];\n\n      let errorCount = this.errors.length;\n      let error = this.validateAll(data, subSchema, [], [\"anyOf\", i], dataPointerPath);\n\n      if (error === null && errorCount === this.errors.length) {\n        this.errors = this.errors.slice(0, startErrorCount);\n\n        if (this.trackUnknownProperties) {\n          for (let knownKey in this.knownPropertyPaths) {\n            oldKnownPropertyPaths[knownKey] = true;\n            delete oldUnknownPropertyPaths[knownKey];\n          }\n          for (let unknownKey in this.unknownPropertyPaths) {\n            if (!oldKnownPropertyPaths[unknownKey]) {\n              oldUnknownPropertyPaths[unknownKey] = true;\n            }\n          }\n          // We need to continue looping so we catch all the\n          // property definitions, but we don't want to return an\n          // error\n          errorAtEnd = false;\n          continue;\n        }\n\n        return null;\n      }\n      if (error) {\n        errors.push(error.prefixWith(null, \"\" + i).prefixWith(null, \"anyOf\"));\n      }\n    }\n    if (this.trackUnknownProperties) {\n      this.unknownPropertyPaths = oldUnknownPropertyPaths;\n      this.knownPropertyPaths = oldKnownPropertyPaths;\n    }\n    if (errorAtEnd) {\n      errors = errors.concat(this.errors.slice(startErrorCount));\n      this.errors = this.errors.slice(0, startErrorCount);\n      return this.createError(ERROR_CODES.ANY_OF_MISSING, {}, \"\", \"/anyOf\", errors);\n    }\n  };\n\n  validateOneOf(data, schema, dataPointerPath) {\n    if (schema.oneOf === undefined) {\n      return null;\n    }\n    let validIndex = null;\n    let errors = [];\n    let startErrorCount = this.errors.length;\n    let oldUnknownPropertyPaths, oldKnownPropertyPaths;\n    if (this.trackUnknownProperties) {\n      oldUnknownPropertyPaths = this.unknownPropertyPaths;\n      oldKnownPropertyPaths = this.knownPropertyPaths;\n    }\n    let i = 0, l = schema.oneOf.length;\n    for (i = 0; i < l; i++) {\n      if (this.trackUnknownProperties) {\n        this.unknownPropertyPaths = {};\n        this.knownPropertyPaths = {};\n      }\n      let subSchema = schema.oneOf[i];\n\n      let errorCount = this.errors.length;\n      let error = this.validateAll(data, subSchema, [], [\"oneOf\", i], dataPointerPath);\n\n      if (error === null && errorCount === this.errors.length) {\n        if (validIndex === null) {\n          validIndex = i;\n        } else {\n          this.errors = this.errors.slice(0, startErrorCount);\n          return this.createError(ERROR_CODES.ONE_OF_MULTIPLE, {index1: validIndex, index2: i}, \"\", \"/oneOf\");\n        }\n        if (this.trackUnknownProperties) {\n          for (let knownKey in this.knownPropertyPaths) {\n            oldKnownPropertyPaths[knownKey] = true;\n            delete oldUnknownPropertyPaths[knownKey];\n          }\n          for (let unknownKey in this.unknownPropertyPaths) {\n            if (!oldKnownPropertyPaths[unknownKey]) {\n              oldUnknownPropertyPaths[unknownKey] = true;\n            }\n          }\n        }\n      } else if (error) {\n        errors.push(error);\n      }\n    }\n    if (this.trackUnknownProperties) {\n      this.unknownPropertyPaths = oldUnknownPropertyPaths;\n      this.knownPropertyPaths = oldKnownPropertyPaths;\n    }\n    if (validIndex === null) {\n      errors = errors.concat(this.errors.slice(startErrorCount));\n      this.errors = this.errors.slice(0, startErrorCount);\n      return this.createError(ERROR_CODES.ONE_OF_MISSING, {}, \"\", \"/oneOf\", errors);\n    } else {\n      this.errors = this.errors.slice(0, startErrorCount);\n    }\n    return null;\n  };\n\n  validateNot(data, schema, dataPointerPath) {\n    if (schema.not === undefined) {\n      return null;\n    }\n    let oldErrorCount = this.errors.length;\n    let oldUnknownPropertyPaths, oldKnownPropertyPaths;\n    if (this.trackUnknownProperties) {\n      oldUnknownPropertyPaths = this.unknownPropertyPaths;\n      oldKnownPropertyPaths = this.knownPropertyPaths;\n      this.unknownPropertyPaths = {};\n      this.knownPropertyPaths = {};\n    }\n    let error = this.validateAll(data, schema.not, null, null, dataPointerPath);\n    let notErrors = this.errors.slice(oldErrorCount);\n    this.errors = this.errors.slice(0, oldErrorCount);\n    if (this.trackUnknownProperties) {\n      this.unknownPropertyPaths = oldUnknownPropertyPaths;\n      this.knownPropertyPaths = oldKnownPropertyPaths;\n    }\n    if (error === null && notErrors.length === 0) {\n      return this.createError(ERROR_CODES.NOT_PASSED, {}, \"\", \"/not\");\n    }\n    return null;\n  };\n\n  validateHypermedia(data, schema, dataPointerPath) {\n    if (!schema.links) {\n      return null;\n    }\n    let error;\n    let i = 0, l = schema.links.length;\n    for (i = 0; i < l; i++) {\n      let ldo = schema.links[i];\n      if (ldo.rel === \"describedby\") {\n        let template = new UriTemplate(ldo.href);\n        let allPresent = true;\n        let j = 0, ll = template.varNames.length;\n        for (j = 0; j < ll; j++) {\n          if (!(template.varNames[j] in data)) {\n            allPresent = false;\n            break;\n          }\n        }\n        if (allPresent) {\n          let schemaUrl = template.fillFromObject(data);\n          let subSchema = {\"$ref\": schemaUrl};\n          if (error = this.validateAll(data, subSchema, [], [\"links\", i], dataPointerPath)) {\n            return error;\n          }\n        }\n      }\n    }\n  };\n};\n\nexport default ValidatorContext = ValidatorContext;\n"],"sourceRoot":""}