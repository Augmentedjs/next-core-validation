{"version":3,"sources":["webpack://core-next-validation/webpack/universalModuleDefinition","webpack://core-next-validation/webpack/bootstrap","webpack://core-next-validation/./src/validationError.js","webpack://core-next-validation/./src/schemaGenerator.js","webpack://core-next-validation/./src/functions.js","webpack://core-next-validation/./src/index.js","webpack://core-next-validation/./src/validationFramework.js","webpack://core-next-validation/./src/api.js","webpack://core-next-validation/./src/validatorContext.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ERROR_CODES","INVALID_TYPE","ENUM_MISMATCH","ANY_OF_MISSING","ONE_OF_MISSING","ONE_OF_MULTIPLE","NOT_PASSED","NUMBER_MULTIPLE_OF","NUMBER_MINIMUM","NUMBER_MINIMUM_EXCLUSIVE","NUMBER_MAXIMUM","NUMBER_MAXIMUM_EXCLUSIVE","NUMBER_NOT_A_NUMBER","STRING_LENGTH_SHORT","STRING_LENGTH_LONG","STRING_PATTERN","OBJECT_PROPERTIES_MINIMUM","OBJECT_PROPERTIES_MAXIMUM","OBJECT_REQUIRED","OBJECT_ADDITIONAL_PROPERTIES","OBJECT_DEPENDENCY_KEY","ARRAY_LENGTH_SHORT","ARRAY_LENGTH_LONG","ARRAY_UNIQUE","ARRAY_ADDITIONAL_ITEMS","FORMAT_CUSTOM","KEYWORD_CUSTOM","CIRCULAR_REFERENCE","UNKNOWN_PROPERTY","ErrorCodeLookup","ERROR_MESSAGES_DEFAULT","ValidationError","constructor","code","message","params","dataPath","schemaPath","subErrors","undefined","Error","err","stack","stacktrace","err2","prefixWith","dataPrefix","schemaPrefix","replace","length","SCHEMA_HEADER","data","title","description","obj","dkey","keys","properties","Array","isArray","Number","isInteger","type","String","URI_TEMPLATE_GLOBAL_MODIFIERS","URI_TEMPLATE_SUFFICES","parseURI","url","match","href","protocol","authority","host","hostname","port","pathname","search","hash","removeDotSegments","input","output","pop","push","join","charAt","resolveUrl","base","slice","lastIndexOf","normSchema","getDocumentUri","uri","split","isTrustedUrl","baseUrl","testUrl","substring","remainder","schema","baseUri","id","ValidationFramework","SchemaGenerator","_myValidator","addLanguage","supportsValidation","registerSchema","identity","addSchema","getSchema","getSchemas","getSchemaMap","clearSchemas","dropSchemas","validate","validateMultiple","getValidationMessages","error","generateSchema","model","languages","createApi","language","_myContext","ValidatorContext","currentLanguage","addFormat","format","validator","messageMap","rootCode","freshApi","result","checkRecursive","banUnknownProperties","context","validateAll","missing","valid","validateResult","apply","arguments","errors","urlHistory","getSchemaUris","getMissingUris","defineKeyword","defineError","codeName","codeNumber","defaultMessage","test","langCode","reset","errorCodes","CLOSE_ENOUGH_LOW","Math","pow","CLOSE_ENOUGH_HIGH","parent","collectMultiple","errorMessages","trackUnknownProperties","missingMap","formatValidators","schemas","handleError","collectError","returnError","scanned","scannedFrozen","scannedFrozenSchemas","scannedFrozenValidationErrors","validatedSchemasKey","validationErrorsKey","knownPropertyPaths","unknownPropertyPaths","definedKeywords","notReallyPercentEncode","string","encodeURI","doubleEncoded","uriTemplateSubstitution","spec","modifier","separator","prefix","shouldEscape","showVariables","trimEmptyString","varNames","varList","varSpecs","varSpecMap","varName","truncate","indexOf","parts","parseInt","suffices","varSpec","subFunction","valueFunction","startIndex","isFunction","j","encodeURIComponent","first","substitution","recursiveCompare","A","B","keyword","keywordFunction","createError","messageParams","messageTemplate","JSON","stringify","whole","subValue","prefixErrors","unknownPath","path","resolveRefs","urls","fragment","pointerPath","decodeURIComponent","component","searchSchemas","map","filterRegExp","list","dataPathParts","schemaPathParts","dataPointerPath","topLevel","frozenIndex","startErrorCount","scannedFrozenSchemaIndex","scannedSchemasIndex","schemaIndex","concat","isFrozen","frozenSchemaIndex","configurable","e","errorCount","validateBasic","validateNumeric","validateString","validateArray","validateObject","validateCombinations","validateHypermedia","validateFormat","validateDefinedKeywords","dataPart","schemaPart","errorMessage","validationFunctions","func","validateType","dataType","allowedTypes","expected","validateEnum","enumVal","validateMultipleOf","validateMinMax","validateNaN","multipleOf","divisibleBy","minimum","exclusiveMinimum","maximum","exclusiveMaximum","isNaN","Infinity","validateStringLength","validateStringPattern","minLength","maxLength","pattern","RegExp","validateArrayLength","validateArrayUniqueItems","validateArrayItems","minItems","maxItems","uniqueItems","match1","match2","items","additionalItems","validateObjectMinMaxProperties","validateObjectRequiredProperties","validateObjectProperties","validateObjectDependencies","minProperties","propertyCount","maxProperties","required","keyPointerPath","foundMatch","patternProperties","patternKey","additionalProperties","dependencies","depKey","dep","lenth","requiredKey","validateAllOf","validateAnyOf","validateOneOf","validateNot","allOf","subSchema","anyOf","oldUnknownPropertyPaths","oldKnownPropertyPaths","errorAtEnd","knownKey","unknownKey","oneOf","validIndex","index1","index2","not","oldErrorCount","notErrors","links","ldo","rel","template","UriTemplate","allPresent","ll","fillFromObject"],"mappings":"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","file":"core-next-validation.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core-next-validation\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core-next-validation\"] = factory();\n\telse\n\t\troot[\"core-next-validation\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","const ERROR_CODES = {\n  INVALID_TYPE: 0,\n  ENUM_MISMATCH: 1,\n  ANY_OF_MISSING: 10,\n  ONE_OF_MISSING: 11,\n  ONE_OF_MULTIPLE: 12,\n  NOT_PASSED: 13,\n  // Numeric errors\n  NUMBER_MULTIPLE_OF: 100,\n  NUMBER_MINIMUM: 101,\n  NUMBER_MINIMUM_EXCLUSIVE: 102,\n  NUMBER_MAXIMUM: 103,\n  NUMBER_MAXIMUM_EXCLUSIVE: 104,\n  NUMBER_NOT_A_NUMBER: 105,\n  // String errors\n  STRING_LENGTH_SHORT: 200,\n  STRING_LENGTH_LONG: 201,\n  STRING_PATTERN: 202,\n  // Object errors\n  OBJECT_PROPERTIES_MINIMUM: 300,\n  OBJECT_PROPERTIES_MAXIMUM: 301,\n  OBJECT_REQUIRED: 302,\n  OBJECT_ADDITIONAL_PROPERTIES: 303,\n  OBJECT_DEPENDENCY_KEY: 304,\n  // Array errors\n  ARRAY_LENGTH_SHORT: 400,\n  ARRAY_LENGTH_LONG: 401,\n  ARRAY_UNIQUE: 402,\n  ARRAY_ADDITIONAL_ITEMS: 403,\n  // Custom/user-defined errors\n  FORMAT_CUSTOM: 500,\n  KEYWORD_CUSTOM: 501,\n  // Schema structure\n  CIRCULAR_REFERENCE: 600,\n  // Non-standard validation options\n  UNKNOWN_PROPERTY: 1000\n};\n\n// TODO: bundle this\nconst ERROR_MESSAGES_DEFAULT = {\n  INVALID_TYPE: \"Invalid type: {type} (expected {expected})\",\n  ENUM_MISMATCH: \"No enum match for: {value}\",\n  ANY_OF_MISSING: \"Data does not match any schemas from \\\"anyOf\\\"\",\n  ONE_OF_MISSING: \"Data does not match any schemas from \\\"oneOf\\\"\",\n  ONE_OF_MULTIPLE: \"Data is valid against more than one schema from \\\"oneOf\\\": indices {index1} and {index2}\",\n  NOT_PASSED: \"Data matches schema from \\\"not\\\"\",\n  // Numeric errors\n  NUMBER_MULTIPLE_OF: \"Value {value} is not a multiple of {multipleOf}\",\n  NUMBER_MINIMUM: \"Value {value} is less than minimum {minimum}\",\n  NUMBER_MINIMUM_EXCLUSIVE: \"Value {value} is equal to exclusive minimum {minimum}\",\n  NUMBER_MAXIMUM: \"Value {value} is greater than maximum {maximum}\",\n  NUMBER_MAXIMUM_EXCLUSIVE: \"Value {value} is equal to exclusive maximum {maximum}\",\n  NUMBER_NOT_A_NUMBER: \"Value {value} is not a valid number\",\n  // String errors\n  STRING_LENGTH_SHORT: \"String is too short ({length} chars), minimum {minimum}\",\n  STRING_LENGTH_LONG: \"String is too long ({length} chars), maximum {maximum}\",\n  STRING_PATTERN: \"String does not match pattern: {pattern}\",\n  // Object errors\n  OBJECT_PROPERTIES_MINIMUM: \"Too few properties defined ({propertyCount}), minimum {minimum}\",\n  OBJECT_PROPERTIES_MAXIMUM: \"Too many properties defined ({propertyCount}), maximum {maximum}\",\n  OBJECT_REQUIRED: \"Missing required property: {key}\",\n  OBJECT_ADDITIONAL_PROPERTIES: \"Additional properties not allowed\",\n  OBJECT_DEPENDENCY_KEY: \"Dependency failed - key must exist: {missing} (due to key: {key})\",\n  // Array errors\n  ARRAY_LENGTH_SHORT: \"Array is too short ({length}), minimum {minimum}\",\n  ARRAY_LENGTH_LONG: \"Array is too long ({length}), maximum {maximum}\",\n  ARRAY_UNIQUE: \"Array items are not unique (indices {match1} and {match2})\",\n  ARRAY_ADDITIONAL_ITEMS: \"Additional items not allowed\",\n  // Format errors\n  FORMAT_CUSTOM: \"Format validation failed ({message})\",\n  KEYWORD_CUSTOM: \"Keyword failed: {key} ({message})\",\n  // Schema structure\n  CIRCULAR_REFERENCE: \"Circular $refs: {urls}\",\n  // Non-standard validation options\n  UNKNOWN_PROPERTY: \"Unknown property (not in schema)\"\n};\n\nclass ValidationError { //extends Error {\n  constructor(code, message, params, dataPath, schemaPath, subErrors) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    //super(code, message, params);\n    //Error.call(this);\n    if (code === undefined) {\n      throw new Error (\"No code supplied for error: \"+ message);\n    }\n    this.message = message;\n    this.params = params;\n    this.code = code;\n    this.dataPath = dataPath || \"\";\n    this.schemaPath = schemaPath || \"\";\n    this.subErrors = subErrors || null;\n\n    const err = new Error(this.message);\n    this.stack = err.stack || err.stacktrace;\n    if (!this.stack) {\n      try {\n        throw err;\n      } catch(err2) {\n        this.stack = err2.stack || err2.stacktrace;\n      }\n    }\n    this.name = \"ValidationError\";\n  };\n\n  prefixWith(dataPrefix, schemaPrefix) {\n    if (dataPrefix !== null) {\n      dataPrefix = dataPrefix.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n      this.dataPath = \"/\" + dataPrefix + this.dataPath;\n    }\n    if (schemaPrefix !== null) {\n      schemaPrefix = schemaPrefix.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n      this.schemaPath = \"/\" + schemaPrefix + this.schemaPath;\n    }\n    if (this.subErrors !== null) {\n      let i = 0, l = this.subErrors.length;\n      for (i = 0; i < l; i++) {\n        this.subErrors[i].prefixWith(dataPrefix, schemaPrefix);\n      }\n    }\n    return this;\n  };\n};\n\nlet ErrorCodeLookup = {}, key;\nfor (key in ERROR_CODES) {\n  ErrorCodeLookup[ERROR_CODES[key]] = key;\n}\n\nexport { ERROR_CODES, ERROR_MESSAGES_DEFAULT, ValidationError, ErrorCodeLookup };\n","const SCHEMA_HEADER = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"model\",\n  \"description\": \"Generated Schema\",\n  \"type\": \"object\",\n  \"properties\": { }\n};\n\n/**\n * <p>Augmented.Utility.SchemaGenerator<br/>\n *\n * Genrate a schema from a set of data</p>\n * @param {object} data a dataset to produce a schema from\n * @memberof Utility\n */\nconst SchemaGenerator = (data, title = \"model\", description = \"Generated Schema\") => {\n  const obj = SCHEMA_HEADER;\n  if (data) {\n    let i, d, dkey, p;\n    const keys = Object.keys(data), l = keys.length;\n    for (i = 0; i < l; i++) {\n      d = keys[i];\n      for (dkey in d) {\n        if (d.hasOwnProperty(dkey)) {\n          p = obj.properties[d] = {};\n  \n          let t = (typeof data[d]);\n          if (t === \"object\") {\n            t = (Array.isArray(data[d])) ? \"array\" : \"object\";\n          } else if (t === \"number\") {\n            t = (Number.isInteger(data[d])) ? \"integer\" : \"number\";\n          }\n          p.type = t;\n          p.description = String(d);\n        }\n      }\n    }\n    obj.title = title;\n    obj.description = description;\n  }\n  return obj;\n};\n\nexport default SchemaGenerator;\n","/**\n * @see https://github.com/geraintluff/uri-templates\n * but with all the de-substitution stuff removed\n */\nexport const URI_TEMPLATE_GLOBAL_MODIFIERS = {\n  \"+\": true,\n  \"#\": true,\n  \".\": true,\n  \"/\": true,\n  \";\": true,\n  \"?\": true,\n  \"&\": true\n};\n\nexport const URI_TEMPLATE_SUFFICES = {\n  \"*\": true\n};\n\n// parseURI() and resolveUrl() are from https://gist.github.com/1088850\n// - released as public domain by author (\"Yaffle\") - see comments on\n// gist\nexport const parseURI = (url) => {\n  const m = String(url).replace(/^\\s+|\\s+$/g, '').match(/^([^:\\/?#]+:)?(\\/\\/(?:[^:@]*(?::[^:@]*)?@)?(([^:\\/?#]*)(?::(\\d*))?))?([^?#]*)(\\?[^#]*)?(#[\\s\\S]*)?/);\n  // authority = '//' + user + ':' + pass '@' + hostname + ':' port\n  return (m ? {\n    href     : m[0] || '',\n    protocol : m[1] || '',\n    authority: m[2] || '',\n    host     : m[3] || '',\n    hostname : m[4] || '',\n    port     : m[5] || '',\n    pathname : m[6] || '',\n    search   : m[7] || '',\n    hash     : m[8] || ''\n  } : null);\n};\n\nexport const removeDotSegments = (input) => {\n  let output = [];\n  input.replace(/^(\\.\\.?(\\/|$))+/, '')\n       .replace(/\\/(\\.(\\/|$))+/g, '/')\n       .replace(/\\/\\.\\.$/, '/../')\n       .replace(/\\/?[^\\/]*/g, function (p) {\n    if (p === '/..') {\n      output.pop();\n    } else {\n      output.push(p);\n    }\n  });\n  return output.join('').replace(/^\\//, input.charAt(0) === '/' ? '/' : '');\n};\n\nexport const resolveUrl = (base, href) => {// RFC 3986\n  href = parseURI(href || '');\n  base = parseURI(base || '');\n\n  return !href || !base ? null : (href.protocol || base.protocol) +\n  (href.protocol || href.authority ? href.authority : base.authority) +\n  removeDotSegments(href.protocol || href.authority || href.pathname.charAt(0) === '/' ? href.pathname : (href.pathname ? ((base.authority && !base.pathname ? '/' : '') + base.pathname.slice(0, base.pathname.lastIndexOf('/') + 1) + href.pathname) : base.pathname)) +\n  (href.protocol || href.authority || href.pathname ? href.search : (href.search || base.search)) +\n  href.hash;\n};\n\nexport const getDocumentUri = (uri) => {\n  return uri.split('#')[0];\n};\n\nexport const isTrustedUrl = (baseUrl, testUrl) => {\n  if(testUrl.substring(0, baseUrl.length) === baseUrl){\n    let remainder = testUrl.substring(baseUrl.length);\n    if ((testUrl.length > 0 && testUrl.charAt(baseUrl.length - 1) === \"/\") || remainder.charAt(0) === \"#\" || remainder.charAt(0) === \"?\") {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const normSchema = (schema, baseUri) => {\n  if (schema && typeof schema === \"object\") {\n    if (baseUri === undefined) {\n      baseUri = schema.id;\n    } else if (typeof schema.id === \"string\") {\n      baseUri = resolveUrl(baseUri, schema.id);\n      schema.id = baseUri;\n    }\n    if (Array.isArray(schema)) {\n      let i = 0, l = schema.length;\n      for (i = 0; i < l; i++) {\n        normSchema(schema[i], baseUri);\n      }\n    } else {\n      if (typeof schema['$ref'] === \"string\") {\n        schema['$ref'] = resolveUrl(baseUri, schema['$ref']);\n      }\n      for (let key in schema) {\n        if (key !== \"enum\") {\n          normSchema(schema[key], baseUri);\n        }\n      }\n    }\n  }\n};\n","import ValidationFramework from \"./validationFramework.js\";\nimport SchemaGenerator from \"./schemaGenerator.js\";\n\nmodule.exports.ValidationFramework = ValidationFramework;\nmodule.exports.SchemaGenerator = SchemaGenerator;\n","import SchemaGenerator from \"./schemaGenerator.js\";\nimport createApi from \"./api.js\";\nimport { ERROR_MESSAGES_DEFAULT } from \"./validationError.js\";\n\n/**\n * Augmented.ValidationFramework -\n * The Validation Framework Base Wrapper Class.\n * Provides abstraction for base validation build-in library\n */\nclass ValidationFramework {\n  constructor() {\n    this._myValidator = createApi();\n    if (this._myValidator) {\n      this._myValidator.addLanguage(\"en-us\", ERROR_MESSAGES_DEFAULT);  // changed to US\n    }\n  };\n\n  /**\n   * Returns if the framework supports validation\n   * @returns {boolean} Returns true if the framework supports validation\n   */\n  supportsValidation() {\n    return (this._myValidator !== null);\n  };\n\n  /**\n   * Registers a schema to the Framework\n   * @param {string} identity The identity of the schema\n   * @param {object} schema The JSON schema\n   * @returns {boolean} Returns true on success\n   */\n  registerSchema(identity, schema) {\n    return this._myValidator.addSchema(identity, schema);\n  };\n\n  /**\n   * Gets a schema\n   * @param {string} identity The identity of the schema\n   * @returns {object} The JSON schema\n   */\n  getSchema(identity) {\n    return this._myValidator.getSchema(identity);\n  };\n\n  /**\n   * Gets all schemas\n   * @returns {array} all JSON schemas\n   */\n  getSchemas() {\n    return this._myValidator.getSchemaMap();\n  };\n\n  /**\n   * Clears all schemas\n   */\n  clearSchemas() {\n    this._myValidator.dropSchemas();\n  };\n\n  /**\n   * Validates data via a schema\n   * @param {object} data The data to validate\n   * @param {object} schema The JSON schema\n   * @returns {object} Returns the validation object\n   */\n  validate(data, schema) {\n    return this._myValidator.validateMultiple(data, schema);\n  };\n\n  /**\n   * Validates data via a schema\n   * @returns {array} Returns the validation messages\n   */\n  getValidationMessages() {\n    return this._myValidator.error;\n  };\n\n  /**\n   * Validates data via a schema\n   * @param {Augmented.Model|object} model The model generate from\n   * @returns {object} Returns the schema\n   */\n  generateSchema(model) {\n    let data = model;\n    /*TODO support model\n    if (model && model instanceof Model) {\n      data = model.toJSON();\n    }*/\n    return SchemaGenerator(data);\n  };\n};\n\nexport default ValidationFramework;\n","import ValidatorContext from \"./validatorContext.js\";\nimport { ErrorCodeLookup, ERROR_CODES, ERROR_MESSAGES_DEFAULT } from \"./validationError.js\";\nimport { normSchema, resolveUrl, getDocumentUri } from \"./functions.js\";\n\nlet languages = {};\n\nconst createApi = (language) => {\n  const _myContext = new ValidatorContext();\n  let currentLanguage = language || 'en';\n\n  const api = {\n    addFormat: (format, validator) => {\n      _myContext.addFormat(format, validator);\n    },\n    language: (code) => {\n      if (!code) {\n        return currentLanguage;\n      }\n      if (!languages[code]) {\n        code = code.split('-')[0]; // fall back to base\n        // language\n      }\n      if (languages[code]) {\n        currentLanguage = code;\n        return code; // so you can tell if fall-back has happened\n      }\n      return false;\n    },\n    addLanguage: (code, messageMap) => {\n      let key;\n      for (key in ERROR_CODES) {\n        if (messageMap[key] && !messageMap[ERROR_CODES[key]]) {\n          messageMap[ERROR_CODES[key]] = messageMap[key];\n        }\n      }\n      let rootCode = code.split('-')[0];\n      if (!languages[rootCode]) { // use for base language if\n        // not yet defined\n        languages[code] = messageMap;\n        languages[rootCode] = messageMap;\n      } else {\n        languages[code] = Object.create(languages[rootCode]);\n        for (key in messageMap) {\n          if (typeof languages[rootCode][key] === 'undefined') {\n            languages[rootCode][key] = messageMap[key];\n          }\n          languages[code][key] = messageMap[key];\n        }\n      }\n      return this;\n    },\n    freshApi: (language) => {\n      const result = createApi();\n      if (language) {\n        result.language(language);\n      }\n      return result;\n    },\n    validate: (data, schema, checkRecursive, banUnknownProperties) => {\n      const context = new ValidatorContext(_myContext, false, languages[currentLanguage], checkRecursive, banUnknownProperties);\n      if (typeof schema === \"string\") {\n        schema = {\"$ref\": schema};\n      }\n      context.addSchema(\"\", schema);\n      let error = context.validateAll(data, schema, null, null, \"\");\n      if (!error && banUnknownProperties) {\n        error = context.banUnknownProperties();\n      }\n      this.error = error;\n      this.missing = context.missing;\n      this.valid = (error === null);\n      return this.valid;\n    },\n    validateResult: () => {\n      let result = {};\n      this.validate.apply(result, arguments);\n      return result;\n    },\n    validateMultiple: (data, schema, checkRecursive, banUnknownProperties) => {\n      const context = new ValidatorContext(_myContext, true, languages[currentLanguage], checkRecursive, banUnknownProperties);\n      if (typeof schema === \"string\") {\n        schema = {\"$ref\": schema};\n      }\n      context.addSchema(\"\", schema);\n      context.validateAll(data, schema, null, null, \"\");\n      if (banUnknownProperties) {\n        context.banUnknownProperties();\n      }\n      let result = {};\n      result.errors = context.errors;\n      result.missing = context.missing;\n      result.valid = (result.errors.length === 0);\n      return result;\n    },\n    addSchema: (url, schema) => {\n      return _myContext.addSchema(url, schema);\n    },\n    getSchema: (url, urlHistory) => {\n      return _myContext.getSchema(url, urlHistory);\n    },\n    getSchemaMap: () => {\n      return _myContext.getSchemaMap.apply(_myContext, arguments);\n    },\n    getSchemaUris: () => {\n      return _myContext.getSchemaUris.apply(_myContext, arguments);\n    },\n    getMissingUris: () => {\n      return _myContext.getMissingUris.apply(_myContext, arguments);\n    },\n    dropSchemas: () => {\n      _myContext.dropSchemas.apply(_myContext, arguments);\n    },\n    defineKeyword: () => {\n      _myContext.defineKeyword.apply(_myContext, arguments);\n    },\n    defineError: (codeName, codeNumber, defaultMessage) => {\n      if (typeof codeName !== 'string' || !/^[A-Z]+(_[A-Z]+)*$/.test(codeName)) {\n        // TODO message bundle this\n        throw new Error('Code name must be a string in UPPER_CASE_WITH_UNDERSCORES');\n      }\n      if (typeof codeNumber !== 'number' || codeNumber%1 !== 0 || codeNumber < 10000) {\n        // TODO message bundle this\n        throw new Error('Code number must be an integer > 10000');\n      }\n      if (typeof ERROR_CODES[codeName] !== 'undefined') {\n        // TODO message bundle this\n        throw new Error('Error already defined: ' + codeName + ' as ' + ERROR_CODES[codeName]);\n      }\n      if (typeof ErrorCodeLookup[codeNumber] !== 'undefined') {\n        // TODO message bundle this\n        throw new Error('Error code already used: ' + ErrorCodeLookup[codeNumber] + ' as ' + codeNumber);\n      }\n      ERROR_CODES[codeName] = codeNumber;\n      ErrorCodeLookup[codeNumber] = codeName;\n      ERROR_MESSAGES_DEFAULT[codeName] = ERROR_MESSAGES_DEFAULT[codeNumber] = defaultMessage;\n      for (let langCode in languages) {\n        let language = languages[langCode];\n        if (language[codeName]) {\n          language[codeNumber] = language[codeNumber] || language[codeName];\n        }\n      }\n    },\n    reset: () => {\n      _myContext.reset();\n      this.error = null;\n      this.missing = [];\n      this.valid = true;\n    },\n    missing: [],\n    error: null,\n    valid: true,\n    normSchema: normSchema,\n    resolveUrl: resolveUrl,\n    getDocumentUri: getDocumentUri,\n    errorCodes: ERROR_CODES\n  };\n  return api;\n};\n\nexport default createApi;\n","import { ValidationError, ERROR_CODES, ERROR_MESSAGES_DEFAULT } from \"./validationError.js\";\nimport { normSchema, getDocumentUri } from \"./functions.js\";\n\nlet CLOSE_ENOUGH_LOW = Math.pow(2, -51);\nlet CLOSE_ENOUGH_HIGH = 1 - CLOSE_ENOUGH_LOW;\n\nclass ValidatorContext {\n  constructor(parent, collectMultiple, errorMessages, checkRecursive, trackUnknownProperties) {\n    this.missing = [];\n    this.missingMap = {};\n    this.formatValidators = parent ? Object.create(parent.formatValidators) : {};\n    this.schemas = parent ? Object.create(parent.schemas) : {};\n    this.collectMultiple = collectMultiple;\n    this.errors = [];\n    this.handleError = collectMultiple ? this.collectError : this.returnError;\n    if (checkRecursive) {\n      this.checkRecursive = true;\n      this.scanned = [];\n      this.scannedFrozen = [];\n      this.scannedFrozenSchemas = [];\n      this.scannedFrozenValidationErrors = [];\n      this.validatedSchemasKey = 'tv4_validation_id';\n      this.validationErrorsKey = 'tv4_validation_errors_id';\n    }\n    if (trackUnknownProperties) {\n      this.trackUnknownProperties = true;\n      this.knownPropertyPaths = {};\n      this.unknownPropertyPaths = {};\n    }\n    this.errorMessages = errorMessages;\n    this.definedKeywords = {};\n    if (parent) {\n      for (let key in parent.definedKeywords) {\n        this.definedKeywords[key] = parent.definedKeywords[key].slice(0);\n      }\n    }\n  };\n\n  notReallyPercentEncode(string) {\n    return encodeURI(string).replace(/%25[0-9][0-9]/g, (doubleEncoded) => {\n      return \"%\" + doubleEncoded.substring(3);\n    });\n  };\n\n  uriTemplateSubstitution(spec) {\n    let modifier = \"\";\n    if (URI_TEMPLATE_GLOBAL_MODIFIERS[spec.charAt(0)]) {\n      modifier = spec.charAt(0);\n      spec = spec.substring(1);\n    }\n    let separator = \"\";\n    let prefix = \"\";\n    let shouldEscape = true;\n    let showVariables = false;\n    let trimEmptyString = false;\n    if (modifier === '+') {\n      shouldEscape = false;\n    } else if (modifier === \".\") {\n      prefix = \".\";\n      separator = \".\";\n    } else if (modifier === \"/\") {\n      prefix = \"/\";\n      separator = \"/\";\n    } else if (modifier === '#') {\n      prefix = \"#\";\n      shouldEscape = false;\n    } else if (modifier === ';') {\n      prefix = \";\";\n      separator = \";\";\n      showVariables = true;\n      trimEmptyString = true;\n    } else if (modifier === '?') {\n      prefix = \"?\";\n      separator = \"&\";\n      showVariables = true;\n    } else if (modifier === '&') {\n      prefix = \"&\";\n      separator = \"&\";\n      showVariables = true;\n    }\n\n    let varNames = [];\n    let varList = spec.split(\",\");\n    let varSpecs = [];\n    let varSpecMap = {};\n    let i = 0, l = varList.length;\n    for (i = 0; i < l; i++) {\n      let varName = varList[i];\n      let truncate = null;\n      if (varName.indexOf(\":\") !== -1) {\n        let parts = varName.split(\":\");\n        varName = parts[0];\n        truncate = parseInt(parts[1], 10);\n      }\n      let suffices = {};\n      while (URI_TEMPLATE_SUFFICES[varName.charAt(varName.length - 1)]) {\n        suffices[varName.charAt(varName.length - 1)] = true;\n        varName = varName.substring(0, varName.length - 1);\n      }\n      let varSpec = {\n        truncate: truncate,\n        name: varName,\n        suffices: suffices\n      };\n      varSpecs.push(varSpec);\n      varSpecMap[varName] = varSpec;\n      varNames.push(varName);\n    }\n\n    const subFunction = (valueFunction) => {\n      let result = \"\";\n      let startIndex = 0;\n      let i = 0, l = varSpecs.length;\n      for (i = 0; i < l; i++) {\n        let varSpec = varSpecs[i];\n\n        if (!valueFunction && !isFunction(valueFunction)) {\n          throw new Error(\"Problem qith value function.\");\n        }\n\n        let value = valueFunction(varSpec.name);\n        if (value === null || value === undefined || (Array.isArray(value) && value.length === 0) || (typeof value === 'object' && Object.keys(value).length === 0)) {\n          startIndex++;\n          continue;\n        }\n        if (i === startIndex) {\n          result += prefix;\n        } else {\n          result += (separator || \",\");\n        }\n        if (Array.isArray(value)) {\n          if (showVariables) {\n            result += varSpec.name + \"=\";\n          }\n          let j = 0;\n          l = value.length;\n          for (j = 0; j < l; j++) {\n            if (j > 0) {\n              result += varSpec.suffices['*'] ? (separator || \",\") : \",\";\n              if (varSpec.suffices['*'] && showVariables) {\n                result += varSpec.name + \"=\";\n              }\n            }\n            result += shouldEscape ? encodeURIComponent(value[j]).replace(/!/g, \"%21\") : this.notReallyPercentEncode(value[j]);\n          }\n        } else if (typeof value === \"object\") {\n          if (showVariables && !varSpec.suffices['*']) {\n            result += varSpec.name + \"=\";\n          }\n          let first = true;\n          for (let key in value) {\n            if (!first) {\n              result += varSpec.suffices['*'] ? (separator || \",\") : \",\";\n            }\n            first = false;\n            result += shouldEscape ? encodeURIComponent(key).replace(/!/g, \"%21\") : this.notReallyPercentEncode(key);\n            result += varSpec.suffices['*'] ? '=' : \",\";\n            result += shouldEscape ? encodeURIComponent(value[key]).replace(/!/g, \"%21\") : this.notReallyPercentEncode(value[key]);\n          }\n        } else {\n          if (showVariables) {\n            result += varSpec.name;\n            if (!trimEmptyString || value !== \"\") {\n              result += \"=\";\n            }\n          }\n          if (varSpec.truncate !== null) {\n            value = value.substring(0, varSpec.truncate);\n          }\n          result += shouldEscape ? encodeURIComponent(value).replace(/!/g, \"%21\"): this.notReallyPercentEncode(value);\n        }\n      }\n      return result;\n    };\n    subFunction.varNames = varNames;\n    return {\n      prefix: prefix,\n      substitution: subFunction\n    };\n  };\n\n  recursiveCompare(A, B) {\n    if (A === B) {\n      return true;\n    }\n    if (typeof A === \"object\" && typeof B === \"object\") {\n      if (Array.isArray(A) !== Array.isArray(B)) {\n        return false;\n      } else if (Array.isArray(A)) {\n        if (A.length !== B.length) {\n          return false;\n        }\n        let i = 0, l = A.length;\n        for (i = 0; i < l; i++) {\n          if (!this.recursiveCompare(A[i], B[i])) {\n            return false;\n          }\n        }\n      } else {\n        let key;\n        for (key in A) {\n          if (B[key] === undefined && A[key] !== undefined) {\n            return false;\n          }\n        }\n        for (key in B) {\n          if (A[key] === undefined && B[key] !== undefined) {\n            return false;\n          }\n        }\n        for (key in A) {\n          if (!this.recursiveCompare(A[key], B[key])) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  };\n\n  defineKeyword(keyword, keywordFunction) {\n    this.definedKeywords[keyword] = this.definedKeywords[keyword] || [];\n    this.definedKeywords[keyword].push(keywordFunction);\n  };\n\n  createError(code, messageParams, dataPath, schemaPath, subErrors) {\n    let messageTemplate = this.errorMessages[code] || ERROR_MESSAGES_DEFAULT[code];\n    if (typeof messageTemplate !== 'string') {\n      return new ValidationError(code, \"Unknown error code \" + code + \": \" + JSON.stringify(messageParams), messageParams, dataPath, schemaPath, subErrors);\n    }\n    // Adapted from Crockford's supplant()\n    let message = messageTemplate.replace(/\\{([^{}]*)\\}/g, function (whole, varName) {\n      let subValue = messageParams[varName];\n      return typeof subValue === 'string' || typeof subValue === 'number' ? subValue : whole;\n    });\n    return new ValidationError(code, message, messageParams, dataPath, schemaPath, subErrors);\n  };\n  returnError(error) {\n    return error;\n  };\n\n  collectError(error) {\n    if (error) {\n      this.errors.push(error);\n    }\n    return null;\n  };\n\n  prefixErrors(startIndex, dataPath, schemaPath) {\n    let i = 0, l = this.errors.length;\n    for (i = startIndex; i < l; i++) {\n      this.errors[i] = this.errors[i].prefixWith(dataPath, schemaPath);\n    }\n    return this;\n  };\n\n  banUnknownProperties() {\n    for (let unknownPath in this.unknownPropertyPaths) {\n      let error = this.createError(ERROR_CODES.UNKNOWN_PROPERTY, {path: unknownPath}, unknownPath, \"\");\n      let result = this.handleError(error);\n      if (result) {\n        return result;\n      }\n    }\n    return null;\n  };\n  addFormat(format, validator) {\n    if (typeof format === 'object') {\n      for (let key in format) {\n        this.addFormat(key, format[key]);\n      }\n      return this;\n    }\n    this.formatValidators[format] = validator;\n  };\n  resolveRefs(schema, urlHistory) {\n    if (schema['$ref'] !== undefined) {\n      urlHistory = urlHistory || {};\n      if (urlHistory[schema['$ref']]) {\n        return this.createError(ERROR_CODES.CIRCULAR_REFERENCE, {urls: Object.keys(urlHistory).join(', ')}, '', '');\n      }\n      urlHistory[schema['$ref']] = true;\n      schema = this.getSchema(schema['$ref'], urlHistory);\n    }\n    return schema;\n  };\n  getSchema(url, urlHistory) {\n    let schema;\n    if (this.schemas[url] !== undefined) {\n      schema = this.schemas[url];\n      return this.resolveRefs(schema, urlHistory);\n    }\n    let baseUrl = url;\n    let fragment = \"\";\n    if (url.indexOf('#') !== -1) {\n      fragment = url.substring(url.indexOf(\"#\") + 1);\n      baseUrl = url.substring(0, url.indexOf(\"#\"));\n    }\n    if (typeof this.schemas[baseUrl] === 'object') {\n      schema = this.schemas[baseUrl];\n      let pointerPath = decodeURIComponent(fragment);\n      if (pointerPath === \"\") {\n        return this.resolveRefs(schema, urlHistory);\n      } else if (pointerPath.charAt(0) !== \"/\") {\n        return undefined;\n      }\n      let parts = pointerPath.split(\"/\").slice(1);\n      let i = 0, l = parts.length;\n      for (i = 0; i < l; i++) {\n        let component = parts[i].replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n        if (schema[component] === undefined) {\n          schema = undefined;\n          break;\n        }\n        schema = schema[component];\n      }\n      if (schema !== undefined) {\n        return this.resolveRefs(schema, urlHistory);\n      }\n    }\n    if (this.missing[baseUrl] === undefined) {\n      this.missing.push(baseUrl);\n      this.missing[baseUrl] = baseUrl;\n      this.missingMap[baseUrl] = baseUrl;\n    }\n  };\n  searchSchemas(schema, url) {\n    if (Array.isArray(schema)) {\n      let i = 0, l = schema.length;\n      for (i = 0; i < l; i++) {\n        this.searchSchemas(schema[i], url);\n      }\n    } else if (schema && typeof schema === \"object\") {\n      if (typeof schema.id === \"string\") {\n        if (isTrustedUrl(url, schema.id)) {\n          if (this.schemas[schema.id] === undefined) {\n            this.schemas[schema.id] = schema;\n          }\n        }\n      }\n      for (let key in schema) {\n        if (key !== \"enum\") {\n          if (typeof schema[key] === \"object\") {\n            this.searchSchemas(schema[key], url);\n          } else if (key === \"$ref\") {\n            let uri = getDocumentUri(schema[key]);\n            if (uri && this.schemas[uri] === undefined && this.missingMap[uri] === undefined) {\n              this.missingMap[uri] = uri;\n            }\n          }\n        }\n      }\n    }\n  };\n  addSchema(url, schema) {\n    // overload\n    if (typeof url !== 'string' || typeof schema === 'undefined') {\n      if (typeof url === 'object' && typeof url.id === 'string') {\n        schema = url;\n        url = schema.id;\n      } else {\n        return;\n      }\n    }\n    if (url === getDocumentUri(url) + \"#\") {\n      // Remove empty fragment\n      url = getDocumentUri(url);\n    }\n    this.schemas[url] = schema;\n    delete this.missingMap[url];\n    normSchema(schema, url);\n    this.searchSchemas(schema, url);\n  };\n\n  getSchemaMap() {\n    let map = {};\n    for (let key in this.schemas) {\n      map[key] = this.schemas[key];\n    }\n    return map;\n  };\n\n  getSchemaUris(filterRegExp) {\n    let list = [];\n    for (let key in this.schemas) {\n      if (!filterRegExp || filterRegExp.test(key)) {\n        list.push(key);\n      }\n    }\n    return list;\n  };\n\n  getMissingUris(filterRegExp) {\n    let list = [];\n    for (let key in this.missingMap) {\n      if (!filterRegExp || filterRegExp.test(key)) {\n        list.push(key);\n      }\n    }\n    return list;\n  };\n\n  dropSchemas() {\n    this.schemas = {};\n    this.reset();\n  };\n\n  reset() {\n    this.missing = [];\n    this.missingMap = {};\n    this.errors = [];\n  };\n\n  validateAll(data, schema, dataPathParts, schemaPathParts, dataPointerPath) {\n    let topLevel;\n    schema = this.resolveRefs(schema);\n\n    if (!schema) {\n      return null;\n    } else if (schema instanceof ValidationError) {\n      this.errors.push(schema);\n      return schema;\n    }\n\n    let startErrorCount = this.errors.length;\n    let frozenIndex, scannedFrozenSchemaIndex = null, scannedSchemasIndex = null;\n    if (this.checkRecursive && data && typeof data === 'object') {\n      topLevel = !this.scanned.length;\n      if (data[this.validatedSchemasKey]) {\n        let schemaIndex = data[this.validatedSchemasKey].indexOf(schema);\n        if (schemaIndex !== -1) {\n          this.errors = this.errors.concat(data[this.validationErrorsKey][schemaIndex]);\n          return null;\n        }\n      }\n      if (Object.isFrozen(data)) {\n        frozenIndex = this.scannedFrozen.indexOf(data);\n        if (frozenIndex !== -1) {\n          let frozenSchemaIndex = this.scannedFrozenSchemas[frozenIndex].indexOf(schema);\n          if (frozenSchemaIndex !== -1) {\n            this.errors = this.errors.concat(this.scannedFrozenValidationErrors[frozenIndex][frozenSchemaIndex]);\n            return null;\n          }\n        }\n      }\n      this.scanned.push(data);\n      if (Object.isFrozen(data)) {\n        if (frozenIndex === -1) {\n          frozenIndex = this.scannedFrozen.length;\n          this.scannedFrozen.push(data);\n          this.scannedFrozenSchemas.push([]);\n        }\n        scannedFrozenSchemaIndex = this.scannedFrozenSchemas[frozenIndex].length;\n        this.scannedFrozenSchemas[frozenIndex][scannedFrozenSchemaIndex] = schema;\n        this.scannedFrozenValidationErrors[frozenIndex][scannedFrozenSchemaIndex] = [];\n      } else {\n        if (!data[this.validatedSchemasKey]) {\n          try {\n            Object.defineProperty(data, this.validatedSchemasKey, {\n              value: [],\n              configurable: true\n            });\n            Object.defineProperty(data, this.validationErrorsKey, {\n              value: [],\n              configurable: true\n            });\n          } catch (e) {\n            // IE 7/8 workaround\n            data[this.validatedSchemasKey] = [];\n            data[this.validationErrorsKey] = [];\n          }\n        }\n        scannedSchemasIndex = data[this.validatedSchemasKey].length;\n        data[this.validatedSchemasKey][scannedSchemasIndex] = schema;\n        data[this.validationErrorsKey][scannedSchemasIndex] = [];\n      }\n    }\n\n    let errorCount = this.errors.length;\n    let error = this.validateBasic(data, schema, dataPointerPath) || this.validateNumeric(data, schema, dataPointerPath) || this.validateString(data, schema, dataPointerPath) || this.validateArray(data, schema, dataPointerPath) || this.validateObject(data, schema, dataPointerPath) || this.validateCombinations(data, schema, dataPointerPath) || this.validateHypermedia(data, schema, dataPointerPath) || this.validateFormat(data, schema, dataPointerPath) || this.validateDefinedKeywords(data, schema, dataPointerPath) || null;\n\n    if (topLevel) {\n      while (this.scanned.length) {\n        let item = this.scanned.pop();\n        delete item[this.validatedSchemasKey];\n      }\n      this.scannedFrozen = [];\n      this.scannedFrozenSchemas = [];\n    }\n\n    if (error || errorCount !== this.errors.length) {\n      while ((dataPathParts && dataPathParts.length) || (schemaPathParts && schemaPathParts.length)) {\n        let dataPart = (dataPathParts && dataPathParts.length) ? \"\" + dataPathParts.pop() : null;\n        let schemaPart = (schemaPathParts && schemaPathParts.length) ? \"\" + schemaPathParts.pop() : null;\n        if (error) {\n          error = error.prefixWith(dataPart, schemaPart);\n        }\n        this.prefixErrors(errorCount, dataPart, schemaPart);\n      }\n    }\n\n    if (scannedFrozenSchemaIndex !== null) {\n      this.scannedFrozenValidationErrors[frozenIndex][scannedFrozenSchemaIndex] = this.errors.slice(startErrorCount);\n    } else if (scannedSchemasIndex !== null) {\n      data[this.validationErrorsKey][scannedSchemasIndex] = this.errors.slice(startErrorCount);\n    }\n\n    return this.handleError(error);\n  };\n\n  validateFormat(data, schema) {\n    if (typeof schema.format !== 'string' || !this.formatValidators[schema.format]) {\n      return null;\n    }\n    let errorMessage = this.formatValidators[schema.format].call(null, data, schema);\n    if (typeof errorMessage === 'string' || typeof errorMessage === 'number') {\n      return this.createError(ERROR_CODES.FORMAT_CUSTOM, {message: errorMessage}).prefixWith(null, \"format\");\n    } else if (errorMessage && typeof errorMessage === 'object') {\n      return this.createError(ERROR_CODES.FORMAT_CUSTOM, {message: errorMessage.message || \"?\"}, errorMessage.dataPath || null, errorMessage.schemaPath || \"/format\");\n    }\n    return null;\n  };\n\n  validateDefinedKeywords(data, schema, dataPointerPath) {\n    for (let key in this.definedKeywords) {\n      if (typeof schema[key] === 'undefined') {\n        continue;\n      }\n      let validationFunctions = this.definedKeywords[key];\n      let i = 0, l = validationFunctions.length;\n      for (i = 0; i < l; i++) {\n        let func = validationFunctions[i];\n        let result = func(data, schema[key], schema, dataPointerPath);\n        if (typeof result === 'string' || typeof result === 'number') {\n          return this.createError(ERROR_CODES.KEYWORD_CUSTOM, {key: key, message: result}).prefixWith(null, \"format\");\n        } else if (result && typeof result === 'object') {\n          let code = result.code;\n          if (typeof code === 'string') {\n            if (!ERROR_CODES[code]) {\n              throw new Error('Undefined error code (use defineError): ' + code);\n            }\n            code = ERROR_CODES[code];\n          } else if (typeof code !== 'number') {\n            code = ERROR_CODES.KEYWORD_CUSTOM;\n          }\n          let messageParams = (typeof result.message === 'object') ? result.message : {key: key, message: result.message || \"?\"};\n          let schemaPath = result.schemaPath ||( \"/\" + key.replace(/~/g, '~0').replace(/\\//g, '~1'));\n          return this.createError(code, messageParams, result.dataPath || null, schemaPath);\n        }\n      }\n    }\n    return null;\n  };\n\n  validateBasic(data, schema, dataPointerPath) {\n    let error = this.validateType(data, schema, dataPointerPath);\n    if (error) {\n      return error.prefixWith(null, \"type\");\n    }\n      /*if (error = this.validateEnum(data, schema, dataPointerPath)) {\n      return error.prefixWith(null, \"type\");\n    }*/\n    return null;\n  };\n\n  validateType(data, schema) {\n    if (schema.type === undefined) {\n      return null;\n    }\n    let dataType = typeof data;\n    if (data === null) {\n      dataType = \"null\";\n    } else if (Array.isArray(data)) {\n      dataType = \"array\";\n    }\n    let allowedTypes = schema.type;\n    if (typeof allowedTypes !== \"object\") {\n      allowedTypes = [allowedTypes];\n    }\n\n    let i = 0, l = allowedTypes.length;\n    for (i = 0; i < l; i++) {\n      let type = allowedTypes[i];\n      if (type === dataType || (type === \"integer\" && dataType === \"number\" && (data % 1 === 0))) {\n        return null;\n      }\n    }\n    return this.createError(ERROR_CODES.INVALID_TYPE, {type: dataType, expected: allowedTypes.join(\"/\")});\n  };\n\n  validateEnum(data, schema) {\n    if (schema[\"enum\"] === undefined) {\n      return null;\n    }\n    let i = 0, l = schema[\"enum\"].length;\n    for (i = 0; i < l; i++) {\n      let enumVal = schema[\"enum\"][i];\n      if (this.recursiveCompare(data, enumVal)) {\n        return null;\n      }\n    }\n    return this.createError(ERROR_CODES.ENUM_MISMATCH, {value: (typeof JSON !== 'undefined') ? JSON.stringify(data) : data});\n  };\n\n  validateNumeric(data, schema, dataPointerPath) {\n    return this.validateMultipleOf(data, schema, dataPointerPath) || this.validateMinMax(data, schema, dataPointerPath) || this.validateNaN(data, schema, dataPointerPath) || null;\n  };\n\n  validateMultipleOf(data, schema) {\n    let multipleOf = schema.multipleOf || schema.divisibleBy;\n    if (multipleOf === undefined) {\n      return null;\n    }\n    if (typeof data === \"number\") {\n      let remainder = (data/multipleOf)%1;\n      if (remainder >= CLOSE_ENOUGH_LOW && remainder < CLOSE_ENOUGH_HIGH) {\n        return this.createError(ERROR_CODES.NUMBER_MULTIPLE_OF, {value: data, multipleOf: multipleOf});\n      }\n    }\n    return null;\n  };\n\n  validateMinMax(data, schema) {\n    if (typeof data !== \"number\") {\n      return null;\n    }\n    if (schema.minimum !== undefined) {\n      if (data < schema.minimum) {\n        return this.createError(ERROR_CODES.NUMBER_MINIMUM, {value: data, minimum: schema.minimum}).prefixWith(null, \"minimum\");\n      }\n      if (schema.exclusiveMinimum && data === schema.minimum) {\n        return this.createError(ERROR_CODES.NUMBER_MINIMUM_EXCLUSIVE, {value: data, minimum: schema.minimum}).prefixWith(null, \"exclusiveMinimum\");\n      }\n    }\n    if (schema.maximum !== undefined) {\n      if (data > schema.maximum) {\n        return this.createError(ERROR_CODES.NUMBER_MAXIMUM, {value: data, maximum: schema.maximum}).prefixWith(null, \"maximum\");\n      }\n      if (schema.exclusiveMaximum && data === schema.maximum) {\n        return this.createError(ERROR_CODES.NUMBER_MAXIMUM_EXCLUSIVE, {value: data, maximum: schema.maximum}).prefixWith(null, \"exclusiveMaximum\");\n      }\n    }\n    return null;\n  };\n\n  validateNaN(data) {\n    if (typeof data !== \"number\") {\n      return null;\n    }\n    if (isNaN(data) === true || data === Infinity || data === -Infinity) {\n      return this.createError(ERROR_CODES.NUMBER_NOT_A_NUMBER, {value: data}).prefixWith(null, \"type\");\n    }\n    return null;\n  };\n\n  validateString(data, schema, dataPointerPath) {\n    return this.validateStringLength(data, schema, dataPointerPath) || this.validateStringPattern(data, schema, dataPointerPath) || null;\n  };\n\n  validateStringLength(data, schema) {\n    if (typeof data !== \"string\") {\n      return null;\n    }\n    if (schema.minLength !== undefined) {\n      if (data.length < schema.minLength) {\n        return this.createError(ERROR_CODES.STRING_LENGTH_SHORT, {length: data.length, minimum: schema.minLength}).prefixWith(null, \"minLength\");\n      }\n    }\n    if (schema.maxLength !== undefined) {\n      if (data.length > schema.maxLength) {\n        return this.createError(ERROR_CODES.STRING_LENGTH_LONG, {length: data.length, maximum: schema.maxLength}).prefixWith(null, \"maxLength\");\n      }\n    }\n    return null;\n  };\n\n  validateStringPattern(data, schema) {\n    if (typeof data !== \"string\" || schema.pattern === undefined) {\n      return null;\n    }\n    let regexp = new RegExp(schema.pattern);\n    if (!regexp.test(data)) {\n      return this.createError(ERROR_CODES.STRING_PATTERN, {pattern: schema.pattern}).prefixWith(null, \"pattern\");\n    }\n    return null;\n  };\n  validateArray(data, schema, dataPointerPath) {\n    if (!Array.isArray(data)) {\n      return null;\n    }\n    return this.validateArrayLength(data, schema, dataPointerPath) || this.validateArrayUniqueItems(data, schema, dataPointerPath) || this.validateArrayItems(data, schema, dataPointerPath) || null;\n  };\n\n  validateArrayLength(data, schema) {\n    let error;\n    if (schema.minItems !== undefined) {\n      if (data.length < schema.minItems) {\n        error = (this.createError(ERROR_CODES.ARRAY_LENGTH_SHORT, {length: data.length, minimum: schema.minItems})).prefixWith(null, \"minItems\");\n        if (this.handleError(error)) {\n          return error;\n        }\n      }\n    }\n    if (schema.maxItems !== undefined) {\n      if (data.length > schema.maxItems) {\n        error = (this.createError(ERROR_CODES.ARRAY_LENGTH_LONG, {length: data.length, maximum: schema.maxItems})).prefixWith(null, \"maxItems\");\n        if (this.handleError(error)) {\n          return error;\n        }\n      }\n    }\n    return null;\n  };\n\n  validateArrayUniqueItems(data, schema) {\n    if (schema.uniqueItems) {\n      let i = 0, l = data.length;\n      for (i = 0; i < l; i++) {\n        let j = 0;\n        for (j = i + 1; j < l; j++) {\n          if (recursiveCompare(data[i], data[j])) {\n            let error = (this.createError(ERROR_CODES.ARRAY_UNIQUE, {match1: i, match2: j})).prefixWith(null, \"uniqueItems\");\n            if (this.handleError(error)) {\n              return error;\n            }\n          }\n        }\n      }\n    }\n    return null;\n  };\n\n  validateArrayItems(data, schema, dataPointerPath) {\n    if (schema.items === undefined) {\n      return null;\n    }\n    let error, i;\n    if (Array.isArray(schema.items)) {\n      let l = data.length;\n      for (i = 0; i < l; i++) {\n        if (i < schema.items.length) {\n          if (error = this.validateAll(data[i], schema.items[i], [i], [\"items\", i], dataPointerPath + \"/\" + i)) {\n            return error;\n          }\n        } else if (schema.additionalItems !== undefined) {\n          if (typeof schema.additionalItems === \"boolean\") {\n            if (!schema.additionalItems) {\n              error = (this.createError(ERROR_CODES.ARRAY_ADDITIONAL_ITEMS, {})).prefixWith(\"\" + i, \"additionalItems\");\n              if (this.handleError(error)) {\n                return error;\n              }\n            }\n          } else if (error = this.validateAll(data[i], schema.additionalItems, [i], [\"additionalItems\"], dataPointerPath + \"/\" + i)) {\n            return error;\n          }\n        }\n      }\n    } else {\n      let l = data.length;\n      for (i = 0; i < l; i++) {\n        if (error = this.validateAll(data[i], schema.items, [i], [\"items\"], dataPointerPath + \"/\" + i)) {\n          return error;\n        }\n      }\n    }\n    return null;\n  };\n\n  validateObject(data, schema, dataPointerPath) {\n    if (typeof data !== \"object\" || data === null || Array.isArray(data)) {\n      return null;\n    }\n    return this.validateObjectMinMaxProperties(data, schema, dataPointerPath) || this.validateObjectRequiredProperties(data, schema, dataPointerPath) || this.validateObjectProperties(data, schema, dataPointerPath) || this.validateObjectDependencies(data, schema, dataPointerPath) || null;\n  };\n\n  validateObjectMinMaxProperties(data, schema) {\n    let keys = Object.keys(data);\n    let error;\n    if (schema.minProperties !== undefined) {\n      if (keys.length < schema.minProperties) {\n        error = this.createError(ERROR_CODES.OBJECT_PROPERTIES_MINIMUM, {propertyCount: keys.length, minimum: schema.minProperties}).prefixWith(null, \"minProperties\");\n        if (this.handleError(error)) {\n          return error;\n        }\n      }\n    }\n    if (schema.maxProperties !== undefined) {\n      if (keys.length > schema.maxProperties) {\n        error = this.createError(ERROR_CODES.OBJECT_PROPERTIES_MAXIMUM, {propertyCount: keys.length, maximum: schema.maxProperties}).prefixWith(null, \"maxProperties\");\n        if (this.handleError(error)) {\n          return error;\n        }\n      }\n    }\n    return null;\n  };\n\n  validateObjectRequiredProperties(data, schema) {\n    if (schema.required !== undefined) {\n      let i = 0, l = schema.required.length;\n      for (i = 0; i < l; i++) {\n        let key = schema.required[i];\n        if (data[key] === undefined) {\n          let error = this.createError(ERROR_CODES.OBJECT_REQUIRED, {key: key}).prefixWith(null, \"\" + i).prefixWith(null, \"required\");\n          if (this.handleError(error)) {\n            return error;\n          }\n        }\n      }\n    }\n    return null;\n  };\n\n  validateObjectProperties(data, schema, dataPointerPath) {\n    let error;\n    for (let key in data) {\n      let keyPointerPath = dataPointerPath + \"/\" + key.replace(/~/g, '~0').replace(/\\//g, '~1');\n      let foundMatch = false;\n      if (schema.properties !== undefined && schema.properties[key] !== undefined) {\n        foundMatch = true;\n        if (error = this.validateAll(data[key], schema.properties[key], [key], [\"properties\", key], keyPointerPath)) {\n          return error;\n        }\n      }\n      if (schema.patternProperties !== undefined) {\n        for (let patternKey in schema.patternProperties) {\n          let regexp = new RegExp(patternKey);\n          if (regexp.test(key)) {\n            foundMatch = true;\n            if (error = this.validateAll(data[key], schema.patternProperties[patternKey], [key], [\"patternProperties\", patternKey], keyPointerPath)) {\n              return error;\n            }\n          }\n        }\n      }\n      if (!foundMatch) {\n        if (schema.additionalProperties !== undefined) {\n          if (this.trackUnknownProperties) {\n            this.knownPropertyPaths[keyPointerPath] = true;\n            delete this.unknownPropertyPaths[keyPointerPath];\n          }\n          if (typeof schema.additionalProperties === \"boolean\") {\n            if (!schema.additionalProperties) {\n              error = this.createError(ERROR_CODES.OBJECT_ADDITIONAL_PROPERTIES, {}).prefixWith(key, \"additionalProperties\");\n              if (this.handleError(error)) {\n                return error;\n              }\n            }\n          } else {\n            if (error = this.validateAll(data[key], schema.additionalProperties, [key], [\"additionalProperties\"], keyPointerPath)) {\n              return error;\n            }\n          }\n        } else if (this.trackUnknownProperties && !this.knownPropertyPaths[keyPointerPath]) {\n          this.unknownPropertyPaths[keyPointerPath] = true;\n        }\n      } else if (this.trackUnknownProperties) {\n        this.knownPropertyPaths[keyPointerPath] = true;\n        delete this.unknownPropertyPaths[keyPointerPath];\n      }\n    }\n    return null;\n  };\n\n  validateObjectDependencies(data, schema, dataPointerPath) {\n    let error;\n    if (schema.dependencies !== undefined) {\n      for (let depKey in schema.dependencies) {\n        if (data[depKey] !== undefined) {\n          let dep = schema.dependencies[depKey];\n          if (typeof dep === \"string\") {\n            if (data[dep] === undefined) {\n              error = this.createError(ERROR_CODES.OBJECT_DEPENDENCY_KEY, {key: depKey, missing: dep}).prefixWith(null, depKey).prefixWith(null, \"dependencies\");\n              if (this.handleError(error)) {\n                return error;\n              }\n            }\n          } else if (Array.isArray(dep)) {\n            let i = 0, l = dep.lenth;\n            for (i = 0; i < l; i++) {\n              let requiredKey = dep[i];\n              if (data[requiredKey] === undefined) {\n                error = this.createError(ERROR_CODES.OBJECT_DEPENDENCY_KEY, {key: depKey, missing: requiredKey}).prefixWith(null, \"\" + i).prefixWith(null, depKey).prefixWith(null, \"dependencies\");\n                if (this.handleError(error)) {\n                  return error;\n                }\n              }\n            }\n          } else {\n            if (error = this.validateAll(data, dep, [], [\"dependencies\", depKey], dataPointerPath)) {\n              return error;\n            }\n          }\n        }\n      }\n    }\n    return null;\n  };\n\n  validateCombinations(data, schema, dataPointerPath) {\n    return this.validateAllOf(data, schema, dataPointerPath) || this.validateAnyOf(data, schema, dataPointerPath) || this.validateOneOf(data, schema, dataPointerPath) || this.validateNot(data, schema, dataPointerPath) || null;\n  };\n\n  validateAllOf(data, schema, dataPointerPath) {\n    if (schema.allOf === undefined) {\n      return null;\n    }\n    let error;\n    let i = 0, l = schema.allOf.length;\n    for (i = 0; i < l; i++) {\n      let subSchema = schema.allOf[i];\n      if (error = this.validateAll(data, subSchema, [], [\"allOf\", i], dataPointerPath)) {\n        return error;\n      }\n    }\n    return null;\n  };\n\n  validateAnyOf(data, schema, dataPointerPath) {\n    if (schema.anyOf === undefined) {\n      return null;\n    }\n    let errors = [];\n    let startErrorCount = this.errors.length;\n    let oldUnknownPropertyPaths, oldKnownPropertyPaths;\n    if (this.trackUnknownProperties) {\n      oldUnknownPropertyPaths = this.unknownPropertyPaths;\n      oldKnownPropertyPaths = this.knownPropertyPaths;\n    }\n    let errorAtEnd = true;\n    let i = 0, l = schema.anyOf.length;\n    for (i = 0; i < l; i++) {\n      if (this.trackUnknownProperties) {\n        this.unknownPropertyPaths = {};\n        this.knownPropertyPaths = {};\n      }\n      let subSchema = schema.anyOf[i];\n\n      let errorCount = this.errors.length;\n      let error = this.validateAll(data, subSchema, [], [\"anyOf\", i], dataPointerPath);\n\n      if (error === null && errorCount === this.errors.length) {\n        this.errors = this.errors.slice(0, startErrorCount);\n\n        if (this.trackUnknownProperties) {\n          for (let knownKey in this.knownPropertyPaths) {\n            oldKnownPropertyPaths[knownKey] = true;\n            delete oldUnknownPropertyPaths[knownKey];\n          }\n          for (let unknownKey in this.unknownPropertyPaths) {\n            if (!oldKnownPropertyPaths[unknownKey]) {\n              oldUnknownPropertyPaths[unknownKey] = true;\n            }\n          }\n          // We need to continue looping so we catch all the\n          // property definitions, but we don't want to return an\n          // error\n          errorAtEnd = false;\n          continue;\n        }\n\n        return null;\n      }\n      if (error) {\n        errors.push(error.prefixWith(null, \"\" + i).prefixWith(null, \"anyOf\"));\n      }\n    }\n    if (this.trackUnknownProperties) {\n      this.unknownPropertyPaths = oldUnknownPropertyPaths;\n      this.knownPropertyPaths = oldKnownPropertyPaths;\n    }\n    if (errorAtEnd) {\n      errors = errors.concat(this.errors.slice(startErrorCount));\n      this.errors = this.errors.slice(0, startErrorCount);\n      return this.createError(ERROR_CODES.ANY_OF_MISSING, {}, \"\", \"/anyOf\", errors);\n    }\n  };\n\n  validateOneOf(data, schema, dataPointerPath) {\n    if (schema.oneOf === undefined) {\n      return null;\n    }\n    let validIndex = null;\n    let errors = [];\n    let startErrorCount = this.errors.length;\n    let oldUnknownPropertyPaths, oldKnownPropertyPaths;\n    if (this.trackUnknownProperties) {\n      oldUnknownPropertyPaths = this.unknownPropertyPaths;\n      oldKnownPropertyPaths = this.knownPropertyPaths;\n    }\n    let i = 0, l = schema.oneOf.length;\n    for (i = 0; i < l; i++) {\n      if (this.trackUnknownProperties) {\n        this.unknownPropertyPaths = {};\n        this.knownPropertyPaths = {};\n      }\n      let subSchema = schema.oneOf[i];\n\n      let errorCount = this.errors.length;\n      let error = this.validateAll(data, subSchema, [], [\"oneOf\", i], dataPointerPath);\n\n      if (error === null && errorCount === this.errors.length) {\n        if (validIndex === null) {\n          validIndex = i;\n        } else {\n          this.errors = this.errors.slice(0, startErrorCount);\n          return this.createError(ERROR_CODES.ONE_OF_MULTIPLE, {index1: validIndex, index2: i}, \"\", \"/oneOf\");\n        }\n        if (this.trackUnknownProperties) {\n          for (let knownKey in this.knownPropertyPaths) {\n            oldKnownPropertyPaths[knownKey] = true;\n            delete oldUnknownPropertyPaths[knownKey];\n          }\n          for (let unknownKey in this.unknownPropertyPaths) {\n            if (!oldKnownPropertyPaths[unknownKey]) {\n              oldUnknownPropertyPaths[unknownKey] = true;\n            }\n          }\n        }\n      } else if (error) {\n        errors.push(error);\n      }\n    }\n    if (this.trackUnknownProperties) {\n      this.unknownPropertyPaths = oldUnknownPropertyPaths;\n      this.knownPropertyPaths = oldKnownPropertyPaths;\n    }\n    if (validIndex === null) {\n      errors = errors.concat(this.errors.slice(startErrorCount));\n      this.errors = this.errors.slice(0, startErrorCount);\n      return this.createError(ERROR_CODES.ONE_OF_MISSING, {}, \"\", \"/oneOf\", errors);\n    } else {\n      this.errors = this.errors.slice(0, startErrorCount);\n    }\n    return null;\n  };\n\n  validateNot(data, schema, dataPointerPath) {\n    if (schema.not === undefined) {\n      return null;\n    }\n    let oldErrorCount = this.errors.length;\n    let oldUnknownPropertyPaths, oldKnownPropertyPaths;\n    if (this.trackUnknownProperties) {\n      oldUnknownPropertyPaths = this.unknownPropertyPaths;\n      oldKnownPropertyPaths = this.knownPropertyPaths;\n      this.unknownPropertyPaths = {};\n      this.knownPropertyPaths = {};\n    }\n    let error = this.validateAll(data, schema.not, null, null, dataPointerPath);\n    let notErrors = this.errors.slice(oldErrorCount);\n    this.errors = this.errors.slice(0, oldErrorCount);\n    if (this.trackUnknownProperties) {\n      this.unknownPropertyPaths = oldUnknownPropertyPaths;\n      this.knownPropertyPaths = oldKnownPropertyPaths;\n    }\n    if (error === null && notErrors.length === 0) {\n      return this.createError(ERROR_CODES.NOT_PASSED, {}, \"\", \"/not\");\n    }\n    return null;\n  };\n\n  validateHypermedia(data, schema, dataPointerPath) {\n    if (!schema.links) {\n      return null;\n    }\n    let error;\n    let i = 0, l = schema.links.length;\n    for (i = 0; i < l; i++) {\n      let ldo = schema.links[i];\n      if (ldo.rel === \"describedby\") {\n        let template = new UriTemplate(ldo.href);\n        let allPresent = true;\n        let j = 0, ll = template.varNames.length;\n        for (j = 0; j < ll; j++) {\n          if (!(template.varNames[j] in data)) {\n            allPresent = false;\n            break;\n          }\n        }\n        if (allPresent) {\n          let schemaUrl = template.fillFromObject(data);\n          let subSchema = {\"$ref\": schemaUrl};\n          if (error = this.validateAll(data, subSchema, [], [\"links\", i], dataPointerPath)) {\n            return error;\n          }\n        }\n      }\n    }\n  };\n};\n\nexport default ValidatorContext = ValidatorContext;\n"],"sourceRoot":""}